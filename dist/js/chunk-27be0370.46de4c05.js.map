{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/src/utils/env.js","webpack:///./node_modules/bootstrap-vue/src/utils/vue.js","webpack:///./node_modules/bootstrap-vue/src/mixins/id.js","webpack:///./node_modules/bootstrap-vue/src/utils/array.js","webpack:///./node_modules/bootstrap-vue/src/utils/safe-types.js","webpack:///./node_modules/bootstrap-vue/src/utils/inspect.js","webpack:///./node_modules/bootstrap-vue/src/utils/normalize-slot.js","webpack:///./node_modules/bootstrap-vue/src/mixins/normalize-slot.js","webpack:///./node_modules/bootstrap-vue/src/utils/object.js","webpack:///./node_modules/bootstrap-vue/src/utils/loose-equal.js","webpack:///./node_modules/bootstrap-vue/src/utils/startcase.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/constants.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/normalize-fields.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-items.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-stacked.js","webpack:///./node_modules/bootstrap-vue/src/utils/clone-deep.js","webpack:///./node_modules/bootstrap-vue/src/utils/warn.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/sanitize-row.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/stringify-object-values.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/stringify-record-values.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-filtering.js","webpack:///./node_modules/bootstrap-vue/src/utils/stable-sort.js","webpack:///./node_modules/bootstrap-vue/src/utils/get.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/default-sort-compare.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-sorting.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-pagination.js","webpack:///./node_modules/bootstrap-vue/src/utils/html.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-caption.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-colgroup.js","webpack:///./node_modules/bootstrap-vue/src/utils/key-codes.js","webpack:///./node_modules/bootstrap-vue/src/utils/memoize.js","webpack:///./node_modules/bootstrap-vue/src/utils/config-defaults.js","webpack:///./node_modules/bootstrap-vue/src/utils/config.js","webpack:///./node_modules/bootstrap-vue/src/utils/dom.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/filter-event.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/text-selection-active.js","webpack:///./node_modules/bootstrap-vue/src/components/table/thead.js","webpack:///./node_modules/bootstrap-vue/src/components/table/tfoot.js","webpack:///./node_modules/bootstrap-vue/src/components/table/tr.js","webpack:///./node_modules/bootstrap-vue/src/utils/to-string.js","webpack:///./node_modules/bootstrap-vue/src/components/table/td.js","webpack:///./node_modules/bootstrap-vue/src/components/table/th.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-thead.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-tfoot.js","webpack:///./node_modules/bootstrap-vue/src/components/table/tbody.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-tbody-row.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-tbody.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-empty.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-top-row.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-bottom-row.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-busy.js","webpack:///./node_modules/bootstrap-vue/src/utils/range.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-selectable.js","webpack:///./node_modules/bootstrap-vue/src/mixins/listen-on-root.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-provider.js","webpack:///./node_modules/bootstrap-vue/src/components/table/helpers/mixin-table-renderer.js","webpack:///./node_modules/bootstrap-vue/src/components/table/table.js","webpack:///./node_modules/bootstrap-vue/src/components/table/table-lite.js","webpack:///./node_modules/bootstrap-vue/src/components/table/table-simple.js","webpack:///./node_modules/bootstrap-vue/src/utils/config-set.js","webpack:///./node_modules/bootstrap-vue/src/utils/plugins.js","webpack:///./node_modules/bootstrap-vue/src/components/table/index.js"],"names":["hasWindowSupport","window","hasDocumentSupport","document","hasNavigatorSupport","navigator","hasPromiseSupport","Promise","hasMutationObserverSupport","MutationObserver","WebKitMutationObserver","MozMutationObserver","isBrowser","userAgent","toLowerCase","isJSDOM","indexOf","hasPassiveEventSupport","test","passiveEventSupported","options","addEventListener","removeEventListener","err","getEnv","documentElement","maxTouchPoints","Boolean","PointerEvent","MSPointerEvent","IntersectionObserverEntry","prototype","key","fallback","env","process","getNoWarn","props","id","type","String","default","localId_","computed","this","fn","suffix","replace","$nextTick","_uid","from","Array","isArray","arrayIncludes","array","value","concat","args","apply","w","Element","Object","toType","HTMLElement","SVGElement","File","val","toRawType","toString","call","slice","isUndefined","undefined","isNull","isUndefinedOrNull","isFunction","isBoolean","isString","isNumber","isDate","Date","isRegExp","isPromise","then","catch","hasNormalizedSlot","names","$scopedSlots","$slots","filter","some","name","normalizeSlot","scope","slot","i","length","methods","vNodes","assign","getOwnPropertyNames","keys","freeze","defineProperties","defineProperty","create","getOwnPropertyDescriptor","getOwnPropertySymbols","getPrototypeOf","isFrozen","is","obj","prop","hasOwnProperty","isObject","isPlainObject","clone","deepFreeze","forEach","compareArrays","a","b","equal","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","startCase","str","$1","$2","toUpperCase","IGNORED_FIELD_KEYS","_rowVariant","_cellVariants","_showDetails","EVENT_FILTER","join","processField","field","label","formatter","normalizeFields","origFields","items","fields","f","push","sample","k","memo","primaryKey","localItems","parent","$parent","computedFields","reduce","paginatedItems","sortedItems","filteredItems","localFilter","sortBy","localSortBy","sortDesc","localSortDesc","perPage","parseInt","currentPage","apiUrl","watch","newItems","newVal","$emit","oldVal","computedItems","computedFieldsObj","stacked","isStacked","isStackedAlways","cloneDeep","defaultValue","result","warn","message","console","sanitizeRow","row","ignoreFields","includeFields","fieldsObj","filterByFormatted","stringifyObjectValues","sort","v","map","stringifyRecordValues","DEPRECATED_DEBOUNCE","RegExp","filterFunction","Function","filterIgnoredFields","filterIncludedFields","filterDebounce","Number","deprecated","validator","isFiltered","filterSanitize","ms","hasProvider","noProviderFiltering","criteria","filterFn","localFiltering","filterFnFactory","localFilterFn","defaultFilterFnFactory","$_filterTimer","clearTimeout","deep","newCriteria","oldCriteria","timeout","computedFilterDebounce","setTimeout","item","regexp","pattern","lastIndex","computedFilterIgnored","computedFilterIncluded","stableSort","compareFn","index","bind","e","get","path","steps","split","every","step","defaultSortCompare","localeOpts","locale","nullLast","aa","bb","localeCompare","sortDirection","direction","sortCompare","sortCompareOptions","numeric","sortCompareLocale","sortNullLast","noSortReset","labelSortAsc","labelSortDesc","labelSortClear","noLocalSorting","noFooterSorting","sortIconLeft","noProviderSorting","sortable","localSorting","sortOptions","usage","sortLocale","sortByFormatted","getFieldFormatter","isSortable","$on","handleSort","$off","evt","isFoot","sortChanged","toggleLocalSortDesc","context","ariaLabel","trim","headerTitle","ariaLabelSorting","ariaSort","noProviderPaging","Math","max","localPaging","htmlOrText","innerHTML","textContent","caption","captionHtml","safeId","h","$createElement","$captionSlot","$caption","data","attrs","captionId","domProps","$colgroup","columns","KEY_CODES","SPACE","ENTER","ESC","LEFT","UP","RIGHT","DOWN","PAGEUP","PAGEDOWN","HOME","END","TAB","SHIFT","CTRL","BACKSPACE","ALT","PAUSE","BREAK","INSERT","INS","DELETE","memoize","cache","argsKey","JSON","stringify","breakpoints","formControls","size","BAlert","dismissLabel","variant","BBadge","BButton","BButtonClose","textVariant","BCardSubTitle","subTitleTextVariant","BCarousel","labelPrev","labelNext","labelGotoSlide","labelIndicators","BDropdown","toggleText","splitVariant","BFormFile","browseText","placeholder","dropPlaceholder","BFormText","BImg","blankColor","BImgLazy","BInputGroup","BJumbotron","bgVariant","borderVariant","BListGroupItem","BModal","titleTag","headerBgVariant","headerBorderVariant","headerTextVariant","headerCloseVariant","bodyBgVariant","bodyTextVariant","footerBgVariant","footerBorderVariant","footerTextVariant","cancelTitle","cancelVariant","okTitle","okVariant","headerCloseLabel","BNavbar","BNavbarToggle","BPagination","BPaginationNav","BPopover","boundary","boundaryPadding","customClass","delay","BProgress","BProgressBar","BSpinner","BTable","selectedVariant","headVariant","footVariant","BToast","toaster","autoHideDelay","toastClass","headerClass","bodyClass","BToaster","ariaLive","ariaAtomic","role","BTooltip","PROP_NAME","VueProto","getConfigValue","getComponentConfig","cmpName","getBreakpoints","_getBreakpointsCached","getBreakpointsCached","d","elProto","matchesEl","matches","msMatchesSelector","webkitMatchesSelector","closestEl","closest","sel","el","parentElement","parentNode","nodeType","Node","ELEMENT_NODE","isElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","selector","root","querySelector","includeRoot","getById","getElementById","getAttr","attr","getAttribute","getSel","getSelection","TABLE_TAG_NAMES","filterEvent","target","disabled","tagName","labelFor","input","textSelectionActive","containsNode","BThead","extend","mixins","inheritAttrs","bvTableRowGroup","inject","bvTable","dark","isResponsive","stickyHeader","tableVariant","$attrs","class","theadClasses","theadAttrs","on","$listeners","BTfoot","tfootClasses","tfootAttrs","LIGHT","DARK","BTr","bvTableTr","isTbody","isThead","isTfoot","isDark","isStickyHeader","hasStickyHeader","inThead","inTfoot","isRowDark","trClasses","trAttrs","spaces","digitsRx","parseSpan","spanValidator","colspan","rowspan","stackedHeading","stickyColumn","BTd","inTbody","isStickyColumn","rowVariant","headOrFoot","computedColspan","computedRowspan","tag","isStackedCell","content","cellClasses","cellAttrs","BTh","extends","headRowVariant","theadClass","theadTrClass","thClass","stopIfBusy","$el","stopPropagation","preventDefault","selectAllRows","isSelectable","clearSelected","makeCell","colIndex","hasHeadClickListener","handlers","click","headClicked","keydown","keyCode","sortAttrs","sortTheadThAttrs","sortClass","sortTheadThClasses","fieldClasses","style","thStyle","tabindex","abbr","headerAbbr","title","getThValues","thAttr","slotNames","hasSlot","column","labelHtml","$cells","th","$trs","trProps","footRowVariant","tfootTrClass","tfootClass","footClone","renderThead","renderTFootCustom","tbodyTransitionProps","tbodyTransitionHandlers","BTbody","tbodyProps","tbodyAttrs","isTransitionGroup","nativeOn","detailsSlotName","tbodyTrClass","detailsTdClass","tdValue","defValue","thValue","hasDetailsSlot","$set","tbodyRowEvtStopped","emitTbodyRowEvent","rowIndex","formatted","getFormattedValue","cellTag","isRowHeader","cellVariant","getTdValues","tdClass","tdAttr","slotScope","unformatted","toggleDetails","toggleDetailsFactory","detailsShowing","supportsSelectableRows","rowSelected","isRowSelected","selectRow","unselectRow","slotName","$_bodyFieldSlotNameCache","$childNodes","tableStriped","striped","rowShowDetails","hasRowClickHandler","hasSelectableRowClick","$rows","detailsId","$tds","renderTbodyRowCell","ariaRowIndex","primaryKeyValue","rowKey","rowId","selectableClasses","selectableRowClasses","selectableAttrs","selectableRowAttrs","ref","refInFor","mouseenter","rowHovered","mouseleave","rowUnhovered","detailsScope","$details","staticClass","tbodyClass","tbody","$refs","trs","itemRows","tr","children","getTbodyTrs","getTbodyTrIndex","activeElement","tabIndex","onTBodyRowClicked","shift","shiftKey","focus","which","$busy","renderBusy","defaultSlotName","fullName","lowerName","renderTopRow","renderTbodyRow","renderEmpty","renderBottomRow","auxclick","onTbodyRowMiddleMouseRowClicked","contextmenu","onTbodyRowContextmenu","dblclick","onTbodyRowDblClicked","onTbodyRowKeydown","$tbody","showEmpty","emptyText","emptyHtml","emptyFilteredText","emptyFilteredHtml","$empty","computedBusy","busySlotName","busy","localBusy","range","selectable","selectMode","noSelectOnClick","selectedRows","selectedLastRow","selectableHasSelection","selectableIsMultiSelect","setSelectionHandlers","idx","selectedLastClicked","method","selectionHandler","selected","min","ctrlKey","metaKey","event","callback","$root","$once","ctx","_providerUpdate","listenOnRoot","refresh","emitOnRoot","_providerSetLocal","bordered","borderless","outlined","hover","small","fixed","responsive","noBorderCollapse","captionTop","tableClass","maxHeight","isTableSimple","border","stackedTableClasses","selectableTableClasses","adb","selectableTableAttrs","ariaAttrs","rowCount","$content","renderCaption","renderColgroup","renderTbody","renderTfoot","$table","tableClasses","tableAttrs","wrapperClasses","wrapperStyles","BTableLite","BTableSimple","$_config","$_cachedBreakpoints","defaults","config","configKeys","cmpConfig","setConfig","Vue","checkMultipleVue","checkMultipleVueWarned","MULTIPLE_VUE_WARNING","installFactory","components","directives","plugins","install","installed","registerComponents","registerDirectives","registerPlugins","pluginFactory","opts","plugin","use","registerComponent","def","component","registerDirective","directive","TableLitePlugin","TableSimplePlugin","TablePlugin"],"mappings":"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","file":"js/chunk-27be0370.46de4c05.js","sourcesContent":["/**\n * Utilities to get information about the current environment\n */\n\n// --- Constants ---\n\nexport const hasWindowSupport = typeof window !== 'undefined'\nexport const hasDocumentSupport = typeof document !== 'undefined'\nexport const hasNavigatorSupport = typeof navigator !== 'undefined'\nexport const hasPromiseSupport = typeof Promise !== 'undefined'\nexport const hasMutationObserverSupport =\n  typeof MutationObserver !== 'undefined' ||\n  typeof WebKitMutationObserver !== 'undefined' ||\n  typeof MozMutationObserver !== 'undefined'\n\nexport const isBrowser = hasWindowSupport && hasDocumentSupport && hasNavigatorSupport\n\n// Browser type sniffing\nexport const userAgent = isBrowser ? window.navigator.userAgent.toLowerCase() : ''\n\nexport const isJSDOM = userAgent.indexOf('jsdom') > 0\nexport const isIE = /msie|trident/.test(userAgent)\n\n// Determine if the browser supports the option passive for events\nexport const hasPassiveEventSupport = (() => {\n  let passiveEventSupported = false\n  if (isBrowser) {\n    try {\n      const options = {\n        get passive() {\n          // This function will be called when the browser\n          // attempts to access the passive property.\n          /* istanbul ignore next: will never be called in JSDOM */\n          passiveEventSupported = true\n        }\n      }\n      window.addEventListener('test', options, options)\n      window.removeEventListener('test', options, options)\n    } catch (err) {\n      /* istanbul ignore next: will never be called in JSDOM */\n      passiveEventSupported = false\n    }\n  }\n  return passiveEventSupported\n})()\n\nexport const hasTouchSupport =\n  isBrowser && ('ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0)\n\nexport const hasPointerEventSupport =\n  isBrowser && Boolean(window.PointerEvent || window.MSPointerEvent)\n\nexport const hasIntersectionObserverSupport =\n  isBrowser &&\n  'IntersectionObserver' in window &&\n  'IntersectionObserverEntry' in window &&\n  // Edge 15 and UC Browser lack support for `isIntersecting`\n  // but we an use intersectionRatio > 0 instead\n  // 'isIntersecting' in window.IntersectionObserverEntry.prototype &&\n  'intersectionRatio' in window.IntersectionObserverEntry.prototype\n\n// --- Getters ---\n\nexport const getEnv = (key, fallback = null) => {\n  const env = typeof process !== 'undefined' && process ? process.env || {} : {}\n  if (!key) {\n    /* istanbul ignore next */\n    return env\n  }\n  return env[key] || fallback\n}\n\nexport const getNoWarn = () => getEnv('BOOTSTRAP_VUE_NO_WARN')\n","//\n// Single point of contact for Vue\n//\n// TODO:\n//   Conditionally import Vue if no global Vue\n//\nimport Vue from 'vue'\n\nexport default Vue\n","/*\n * SSR Safe Client Side ID attribute generation\n * id's can only be generated client side, after mount.\n * this._uid is not synched between server and client.\n */\n\n// @vue/component\nexport default {\n  props: {\n    id: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      localId_: null\n    }\n  },\n  computed: {\n    safeId() {\n      // Computed property that returns a dynamic function for creating the ID.\n      // Reacts to changes in both .id and .localId_ And regens a new function\n      const id = this.id || this.localId_\n\n      // We return a function that accepts an optional suffix string\n      // So this computed prop looks and works like a method!!!\n      // But benefits from Vue's Computed prop caching\n      const fn = suffix => {\n        if (!id) {\n          return null\n        }\n        suffix = String(suffix || '').replace(/\\s+/g, '_')\n        return suffix ? id + '_' + suffix : id\n      }\n      return fn\n    }\n  },\n  mounted() {\n    // mounted only occurs client side\n    this.$nextTick(() => {\n      // Update dom with auto ID after dom loaded to prevent\n      // SSR hydration errors.\n      this.localId_ = `__BVID__${this._uid}`\n    })\n  }\n}\n","// --- Static ---\n\nexport const from = Array.from\nexport const isArray = Array.isArray\n\n// --- Instance ---\n\nexport const arrayIncludes = (array, value) => array.indexOf(value) !== -1\nexport const concat = (...args) => Array.prototype.concat.apply([], args)\n","/**\n * SSR safe types\n */\n\nimport { hasWindowSupport } from './env'\n\nconst w = hasWindowSupport ? window : {}\n\nexport const Element = hasWindowSupport ? w.Element : class Element extends Object {}\n\nexport const HTMLElement = hasWindowSupport ? w.HTMLElement : class HTMLElement extends Element {}\n\nexport const SVGElement = hasWindowSupport ? w.SVGElement : class SVGElement extends Element {}\n\nexport const File = hasWindowSupport ? w.File : class File extends Object {}\n","import { isArray } from './array'\nimport { isObject, isPlainObject } from './object'\nimport { File } from './safe-types'\n\n// --- Convenience inspection utilities ---\n\nexport const toType = val => typeof val\n\nexport const toRawType = val => Object.prototype.toString.call(val).slice(8, -1)\n\nexport const toRawTypeLC = val => toRawType(val).toLowerCase()\n\nexport const isUndefined = val => val === undefined\n\nexport const isNull = val => val === null\n\nexport const isUndefinedOrNull = val => isUndefined(val) || isNull(val)\n\nexport const isFunction = val => toType(val) === 'function'\n\nexport const isBoolean = val => toType(val) === 'boolean'\n\nexport const isString = val => toType(val) === 'string'\n\nexport const isNumber = val => toType(val) === 'number'\n\nexport const isPrimitive = val => isBoolean(val) || isString(val) || isNumber(val)\n\nexport const isDate = val => val instanceof Date\n\nexport const isEvent = val => val instanceof Event\n\nexport const isFile = val => val instanceof File\n\nexport const isRegExp = val => toRawType(val) === 'RegExp'\n\nexport const isPromise = val =>\n  !isUndefinedOrNull(val) && isFunction(val.then) && isFunction(val.catch)\n\n// Extra convenience named re-exports\nexport { isArray, isObject, isPlainObject }\n","import { concat } from './array'\nimport { isFunction } from './inspect'\n\n// Note for functional components:\n// In functional components, `slots` is a function so it must be called\n// first before passing to the below methods. `scopedSlots` is always an\n// object and may be undefined (for Vue < 2.6.x)\n\n/**\n * Returns true if either scoped or unscoped named slot exists\n *\n * @param {String, Array} name or name[]\n * @param {Object} scopedSlots\n * @param {Object} slots\n * @returns {Array|undefined} VNodes\n */\nconst hasNormalizedSlot = (names, $scopedSlots = {}, $slots = {}) => {\n  // Ensure names is an array\n  names = concat(names).filter(Boolean)\n  // Returns true if the either a $scopedSlot or $slot exists with the specified name\n  return names.some(name => $scopedSlots[name] || $slots[name])\n}\n\n/**\n * Returns VNodes for named slot either scoped or unscoped\n *\n * @param {String, Array} name or name[]\n * @param {String} scope\n * @param {Object} scopedSlots\n * @param {Object} slots\n * @returns {Array|undefined} VNodes\n */\nconst normalizeSlot = (names, scope = {}, $scopedSlots = {}, $slots = {}) => {\n  // Ensure names is an array\n  names = concat(names).filter(Boolean)\n  let slot\n  for (let i = 0; i < names.length && !slot; i++) {\n    const name = names[i]\n    slot = $scopedSlots[name] || $slots[name]\n  }\n  // Note: in Vue 2.6.x, all named slots are also scoped slots\n  return isFunction(slot) ? slot(scope) : slot\n}\n\n// Named exports\nexport { hasNormalizedSlot, normalizeSlot }\n\n// Default export (backwards compatibility)\nexport default normalizeSlot\n","import { hasNormalizedSlot, normalizeSlot } from '../utils/normalize-slot'\nimport { concat } from '../utils/array'\n\nexport default {\n  methods: {\n    hasNormalizedSlot(names) {\n      // Returns true if the either a $scopedSlot or $slot exists with the specified name\n      // `names` can be a string name or an array of names\n      return hasNormalizedSlot(names, this.$scopedSlots, this.$slots)\n    },\n    normalizeSlot(names, scope = {}) {\n      // Returns an array of rendered VNodes if slot found.\n      // Returns undefined if not found.\n      // `names` can be a string name or an array of names\n      const vNodes = normalizeSlot(names, scope, this.$scopedSlots, this.$slots)\n      return vNodes ? concat(vNodes) : vNodes\n    }\n  }\n}\n","import { isArray } from './array'\n\n// --- Static ---\n\nexport const assign = Object.assign\nexport const getOwnPropertyNames = Object.getOwnPropertyNames\nexport const keys = Object.keys\nexport const defineProperties = Object.defineProperties\nexport const defineProperty = Object.defineProperty\nexport const freeze = Object.freeze\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols\nexport const getPrototypeOf = Object.getPrototypeOf\nexport const create = Object.create\nexport const isFrozen = Object.isFrozen\nexport const is = Object.is\n\n// --- \"Instance\" ---\n\nexport const hasOwnProperty = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\nexport const toString = obj => Object.prototype.toString.call(obj)\n\n// --- Utilities ---\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n * Note object could be a complex type like array, date, etc.\n */\nexport const isObject = obj => obj !== null && typeof obj === 'object'\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nexport const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]'\n\n/**\n * Shallow copy an object. If the passed in object\n * is null or undefined, returns an empty object\n */\nexport const clone = obj => ({ ...obj })\n\n/**\n * Return a shallow copy of object with\n * the specified properties omitted\n * @link https://gist.github.com/bisubus/2da8af7e801ffd813fab7ac221aa7afc\n */\nexport const omit = (obj, props) =>\n  keys(obj)\n    .filter(key => props.indexOf(key) === -1)\n    .reduce((result, key) => ({ ...result, [key]: obj[key] }), {})\n\n/**\n * Convenience method to create a read-only descriptor\n */\nexport const readonlyDescriptor = () => ({ enumerable: true, configurable: false, writable: false })\n\n/**\n * Deep-freezes and object, making it immutable / read-only.\n * Returns the same object passed-in, but frozen.\n * Freezes inner object/array/values first.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n * Note: this method will not work for property values using Symbol() as a key\n */\nexport const deepFreeze = obj => {\n  // Retrieve the property names defined on object/array\n  // Note: `keys` will ignore properties that are keyed by a `Symbol()`\n  const props = keys(obj)\n  // Iterate over each prop and recursively freeze it\n  props.forEach(prop => {\n    const value = obj[prop]\n    // If value is a plain object or array, we deepFreeze it\n    obj[prop] = value && (isPlainObject(value) || isArray(value)) ? deepFreeze(value) : value\n  })\n  return freeze(obj)\n}\n","import { keys } from './object'\nimport { isArray, isDate, isObject } from './inspect'\n\n// Assumes both a and b are arrays!\n// Handles when arrays are \"sparse\" (array.every(...) doesn't handle sparse)\nconst compareArrays = (a, b) => {\n  if (a.length !== b.length) {\n    return false\n  }\n  let equal = true\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i])\n  }\n  return equal\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n * Returns boolean true or false\n */\nconst looseEqual = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  let aValidType = isDate(a)\n  let bValidType = isDate(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\n  }\n  aValidType = isArray(a)\n  bValidType = isArray(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? compareArrays(a, b) : false\n  }\n  aValidType = isObject(a)\n  bValidType = isObject(b)\n  if (aValidType || bValidType) {\n    /* istanbul ignore if: this if will probably never be called */\n    if (!aValidType || !bValidType) {\n      return false\n    }\n    const aKeysCount = keys(a).length\n    const bKeysCount = keys(b).length\n    if (aKeysCount !== bKeysCount) {\n      return false\n    }\n    for (const key in a) {\n      // eslint-disable-next-line no-prototype-builtins\n      const aHasKey = a.hasOwnProperty(key)\n      // eslint-disable-next-line no-prototype-builtins\n      const bHasKey = b.hasOwnProperty(key)\n      if ((aHasKey && !bHasKey) || (!aHasKey && bHasKey) || !looseEqual(a[key], b[key])) {\n        return false\n      }\n    }\n  }\n  return String(a) === String(b)\n}\n\nexport default looseEqual\n","/**\n * Converts a string, including strings in camelCase or snake_case, into Start Case (a variant\n * of Title Case where all words start with a capital letter), it keeps original single quote\n * and hyphen in the word.\n *\n * Copyright (c) 2017 Compass (MIT)\n * https://github.com/UrbanCompass/to-start-case\n * @author Zhuoyuan Zhang <https://github.com/drawyan>\n * @author Wei Wang <https://github.com/onlywei>\n *\n *\n *   'management_companies' to 'Management Companies'\n *   'managementCompanies' to 'Management Companies'\n *   `hell's kitchen` to `Hell's Kitchen`\n *   `co-op` to `Co-op`\n *\n * @param {String} str\n * @returns {String}\n */\nconst startCase = str =>\n  str\n    .replace(/_/g, ' ')\n    .replace(/([a-z])([A-Z])/g, (str, $1, $2) => $1 + ' ' + $2)\n    .replace(/(\\s|^)(\\w)/g, (str, $1, $2) => $1 + $2.toUpperCase())\n\nexport default startCase\n","// Constants used by table helpers\n\n// Object of item keys that should be ignored for headers and\n// stringification and filter events\nexport const IGNORED_FIELD_KEYS = {\n  _rowVariant: true,\n  _cellVariants: true,\n  _showDetails: true\n}\n\n// Filter CSS selector for click/dblclick/etc. events\n// If any of these selectors match the clicked element, we ignore the event\nexport const EVENT_FILTER = [\n  'a',\n  'a *', // Include content inside links\n  'button',\n  'button *', // Include content inside buttons\n  'input:not(.disabled):not([disabled])',\n  'select:not(.disabled):not([disabled])',\n  'textarea:not(.disabled):not([disabled])',\n  '[role=\"link\"]',\n  '[role=\"link\"] *',\n  '[role=\"button\"]',\n  '[role=\"button\"] *',\n  '[tabindex]:not(.disabled):not([disabled])'\n].join(',')\n","import startCase from '../../../utils/startcase'\nimport { isArray, isFunction, isObject, isString } from '../../../utils/inspect'\nimport { clone, keys } from '../../../utils/object'\nimport { IGNORED_FIELD_KEYS } from './constants'\n\n// Private function to massage field entry into common object format\nconst processField = (key, value) => {\n  let field = null\n  if (isString(value)) {\n    // Label shortcut\n    field = { key: key, label: value }\n  } else if (isFunction(value)) {\n    // Formatter shortcut\n    field = { key: key, formatter: value }\n  } else if (isObject(value)) {\n    field = clone(value)\n    field.key = field.key || key\n  } else if (value !== false) {\n    // Fallback to just key\n    /* istanbul ignore next */\n    field = { key: key }\n  }\n  return field\n}\n\n// We normalize fields into an array of objects\n// [ { key:..., label:..., ...}, {...}, ..., {..}]\nconst normalizeFields = (origFields, items) => {\n  const fields = []\n\n  if (isArray(origFields)) {\n    // Normalize array Form\n    origFields.filter(f => f).forEach(f => {\n      if (isString(f)) {\n        fields.push({ key: f, label: startCase(f) })\n      } else if (isObject(f) && f.key && isString(f.key)) {\n        // Full object definition. We use assign so that we don't mutate the original\n        fields.push(clone(f))\n      } else if (isObject(f) && keys(f).length === 1) {\n        // Shortcut object (i.e. { 'foo_bar': 'This is Foo Bar' }\n        const key = keys(f)[0]\n        const field = processField(key, f[key])\n        if (field) {\n          fields.push(field)\n        }\n      }\n    })\n  }\n\n  // If no field provided, take a sample from first record (if exits)\n  if (fields.length === 0 && isArray(items) && items.length > 0) {\n    const sample = items[0]\n    keys(sample).forEach(k => {\n      if (!IGNORED_FIELD_KEYS[k]) {\n        fields.push({ key: k, label: startCase(k) })\n      }\n    })\n  }\n\n  // Ensure we have a unique array of fields and that they have String labels\n  const memo = {}\n  return fields.filter(f => {\n    if (!memo[f.key]) {\n      memo[f.key] = true\n      f.label = isString(f.label) ? f.label : startCase(f.key)\n      return true\n    }\n    return false\n  })\n}\n\nexport default normalizeFields\n","import looseEqual from '../../../utils/loose-equal'\nimport { isArray, isFunction, isNull, isString, isUndefined } from '../../../utils/inspect'\nimport { clone } from '../../../utils/object'\nimport normalizeFields from './normalize-fields'\n\nexport default {\n  props: {\n    items: {\n      // Provider mixin adds in `Function` type\n      type: Array,\n      default() /* istanbul ignore next */ {\n        return []\n      }\n    },\n    fields: {\n      type: Array,\n      default: null\n    },\n    primaryKey: {\n      // Primary key for record\n      // If provided the value in each row must be unique!\n      type: String,\n      default: null\n    },\n    value: {\n      // `v-model` for retrieving the current displayed rows\n      type: Array,\n      default() {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      // Our local copy of the items\n      // Must be an array\n      localItems: isArray(this.items) ? this.items.slice() : []\n    }\n  },\n  computed: {\n    computedFields() {\n      // We normalize fields into an array of objects\n      // `[ { key:..., label:..., ...}, {...}, ..., {..}]`\n      return normalizeFields(this.fields, this.localItems)\n    },\n    computedFieldsObj() {\n      // Fields as a simple lookup hash object\n      // Mainly for formatter lookup and use in `scopedSlots` for convenience\n      // If the field has a formatter, it normalizes formatter to a\n      // function ref or `undefined` if no formatter\n      const parent = this.$parent\n      return this.computedFields.reduce((obj, f) => {\n        // We use object spread here so we don't mutate the original field object\n        obj[f.key] = clone(f)\n        if (f.formatter) {\n          // Normalize formatter to a function ref or `undefined`\n          let formatter = f.formatter\n          if (isString(formatter) && isFunction(parent[formatter])) {\n            formatter = parent[formatter]\n          } else if (!isFunction(formatter)) {\n            /* istanbul ignore next */\n            formatter = undefined\n          }\n          // Return formatter function or `undefined` if none\n          obj[f.key].formatter = formatter\n        }\n        return obj\n      }, {})\n    },\n    computedItems() {\n      // Fallback if various mixins not provided\n      return (\n        this.paginatedItems ||\n        this.sortedItems ||\n        this.filteredItems ||\n        this.localItems ||\n        []\n      ).slice()\n    },\n    context() {\n      // Current state of sorting, filtering and pagination props/values\n      return {\n        filter: this.localFilter,\n        sortBy: this.localSortBy,\n        sortDesc: this.localSortDesc,\n        perPage: parseInt(this.perPage, 10) || 0,\n        currentPage: parseInt(this.currentPage, 10) || 1,\n        apiUrl: this.apiUrl\n      }\n    }\n  },\n  watch: {\n    items(newItems) {\n      /* istanbul ignore else */\n      if (isArray(newItems)) {\n        // Set `localItems`/`filteredItems` to a copy of the provided array\n        this.localItems = newItems.slice()\n      } else if (isUndefined(newItems) || isNull(newItems)) {\n        /* istanbul ignore next */\n        this.localItems = []\n      }\n    },\n    // Watch for changes on `computedItems` and update the `v-model`\n    computedItems(newVal) {\n      this.$emit('input', newVal)\n    },\n    // Watch for context changes\n    context(newVal, oldVal) {\n      // Emit context information for external paging/filtering/sorting handling\n      if (!looseEqual(newVal, oldVal)) {\n        this.$emit('context-changed', newVal)\n      }\n    }\n  },\n  mounted() {\n    // Initially update the `v-model` of displayed items\n    this.$emit('input', this.computedItems)\n  },\n  methods: {\n    // Method to get the formatter method for a given field key\n    getFieldFormatter(key) {\n      const field = this.computedFieldsObj[key]\n      // `this.computedFieldsObj` has pre-normalized the formatter to a\n      // function ref if present, otherwise `undefined`\n      return field ? field.formatter : undefined\n    }\n  }\n}\n","// Mixin for providing stacked tables\n\nexport default {\n  props: {\n    stacked: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  computed: {\n    isStacked() {\n      // `true` when always stacked, or returns breakpoint specified\n      return this.stacked === '' ? true : this.stacked\n    },\n    isStackedAlways() {\n      return this.isStacked === true\n    },\n    stackedTableClasses() {\n      return {\n        'b-table-stacked': this.isStackedAlways,\n        [`b-table-stacked-${this.stacked}`]: !this.isStackedAlways && this.isStacked\n      }\n    }\n  }\n}\n","import { isArray, isPlainObject } from './inspect'\nimport { keys } from './object'\n\nexport const cloneDeep = (obj, defaultValue = obj) => {\n  if (isArray(obj)) {\n    return obj.reduce((result, val) => [...result, cloneDeep(val, val)], [])\n  }\n  if (isPlainObject(obj)) {\n    return keys(obj).reduce(\n      (result, key) => ({ ...result, [key]: cloneDeep(obj[key], obj[key]) }),\n      {}\n    )\n  }\n  return defaultValue\n}\n\nexport default cloneDeep\n","import { isBrowser, hasPromiseSupport, hasMutationObserverSupport, getNoWarn } from './env'\n\n/**\n * Log a warning message to the console with BootstrapVue formatting\n * @param {string} message\n */\nexport const warn = message => /* istanbul ignore next */ {\n  if (!getNoWarn()) {\n    console.warn(`[BootstrapVue warn]: ${message}`)\n  }\n}\n\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\nexport const warnNotClient = source => {\n  /* istanbul ignore else */\n  if (isBrowser) {\n    return false\n  } else {\n    warn(`${source}: Can not be called during SSR.`)\n    return true\n  }\n}\n\n/**\n * Warn when no Promise support is given\n * @param {string} source\n * @returns {boolean} warned\n */\nexport const warnNoPromiseSupport = source => {\n  /* istanbul ignore else */\n  if (hasPromiseSupport) {\n    return false\n  } else {\n    warn(`${source}: Requires Promise support.`)\n    return true\n  }\n}\n\n/**\n * Warn when no MutationObserver support is given\n * @param {string} source\n * @returns {boolean} warned\n */\nexport const warnNoMutationObserverSupport = source => {\n  /* istanbul ignore else */\n  if (hasMutationObserverSupport) {\n    return false\n  } else {\n    warn(`${source}: Requires MutationObserver support.`)\n    return true\n  }\n}\n\n// Default export\nexport default warn\n","import { keys } from '../../../utils/object'\nimport { arrayIncludes } from '../../../utils/array'\nimport { isFunction } from '../../../utils/inspect'\nimport { IGNORED_FIELD_KEYS } from './constants'\n\n// Return a copy of a row after all reserved fields have been filtered out\nconst sanitizeRow = (row, ignoreFields, includeFields, fieldsObj = {}) =>\n  keys(row).reduce((obj, key) => {\n    // Ignore special fields that start with `_`\n    // Ignore fields in the `ignoreFields` array\n    // Include only fields in the `includeFields` array\n    if (\n      !IGNORED_FIELD_KEYS[key] &&\n      !(ignoreFields && ignoreFields.length > 0 && arrayIncludes(ignoreFields, key)) &&\n      !(includeFields && includeFields.length > 0 && !arrayIncludes(includeFields, key))\n    ) {\n      const f = fieldsObj[key] || {}\n      const val = row[key]\n      // `f.filterByFormatted` will either be a function or boolean\n      // `f.formater` will have already been noramlized into a function ref\n      const filterByFormatted = f.filterByFormatted\n      const formatter = isFunction(filterByFormatted)\n        ? filterByFormatted\n        : filterByFormatted\n          ? f.formatter\n          : null\n      obj[key] = isFunction(formatter) ? formatter(val, key, row) : val\n    }\n    return obj\n  }, {})\n\nexport default sanitizeRow\n","import { keys } from '../../../utils/object'\nimport { isDate, isObject, isUndefinedOrNull } from '../../../utils/inspect'\n\n// Recursively stringifies the values of an object, space separated, in an\n// SSR safe deterministic way (keys are sorted before stringification)\n//\n//   ex:\n//     { b: 3, c: { z: 'zzz', d: null, e: 2 }, d: [10, 12, 11], a: 'one' }\n//   becomes\n//     'one 3 2 zzz 10 12 11'\n//\n// Primitives (numbers/strings) are returned as-is\n// Null and undefined values are filtered out\n// Dates are converted to their native string format\nconst stringifyObjectValues = val => {\n  if (isUndefinedOrNull(val)) {\n    /* istanbul ignore next */\n    return ''\n  }\n  // Arrays are also object, and keys just returns the array indexes\n  // Date objects we convert to strings\n  if (isObject(val) && !isDate(val)) {\n    return keys(val)\n      .sort() // Sort to prevent SSR issues on pre-rendered sorted tables\n      .filter(v => !isUndefinedOrNull(v)) // Ignore undefined/null values\n      .map(k => stringifyObjectValues(val[k]))\n      .join(' ')\n  }\n  return String(val)\n}\n\nexport default stringifyObjectValues\n","import { isObject } from '../../../utils/inspect'\nimport sanitizeRow from './sanitize-row'\nimport stringifyObjectValues from './stringify-object-values'\n\n// Stringifies the values of a record, ignoring any special top level field keys\n// TODO: Add option to stringify `scopedSlot` items\nconst stringifyRecordValues = (row, ignoreFields, includeFields, fieldsObj) => {\n  return isObject(row)\n    ? stringifyObjectValues(sanitizeRow(row, ignoreFields, includeFields, fieldsObj))\n    : ''\n}\n\nexport default stringifyRecordValues\n","import cloneDeep from '../../../utils/clone-deep'\nimport looseEqual from '../../../utils/loose-equal'\nimport { concat } from '../../../utils/array'\nimport { isFunction, isString, isRegExp } from '../../../utils/inspect'\nimport { warn } from '../../../utils/warn'\nimport stringifyRecordValues from './stringify-record-values'\n\nconst DEPRECATED_DEBOUNCE =\n  'b-table: Prop \"filter-debounce\" is deprecated. Use the debounce feature of <b-form-input> instead'\n\nexport default {\n  props: {\n    filter: {\n      type: [String, RegExp, Object, Array],\n      default: null\n    },\n    filterFunction: {\n      type: Function,\n      default: null\n    },\n    filterIgnoredFields: {\n      type: Array\n      // default: undefined\n    },\n    filterIncludedFields: {\n      type: Array\n      // default: undefined\n    },\n    filterDebounce: {\n      type: [Number, String],\n      deprecated: DEPRECATED_DEBOUNCE,\n      default: 0,\n      validator: val => /^\\d+/.test(String(val))\n    }\n  },\n  data() {\n    return {\n      // Flag for displaying which empty slot to show and some event triggering\n      isFiltered: false,\n      // Where we store the copy of the filter criteria after debouncing\n      // We pre-set it with the sanitized filter value\n      localFilter: this.filterSanitize(this.filter)\n    }\n  },\n  computed: {\n    computedFilterIgnored() {\n      return this.filterIgnoredFields ? concat(this.filterIgnoredFields).filter(Boolean) : null\n    },\n    computedFilterIncluded() {\n      return this.filterIncludedFields ? concat(this.filterIncludedFields).filter(Boolean) : null\n    },\n    computedFilterDebounce() {\n      const ms = parseInt(this.filterDebounce, 10) || 0\n      /* istanbul ignore next */\n      if (ms > 0) {\n        warn(DEPRECATED_DEBOUNCE)\n      }\n      return ms\n    },\n    localFiltering() {\n      return this.hasProvider ? !!this.noProviderFiltering : true\n    },\n    // For watching changes to `filteredItems` vs `localItems`\n    filteredCheck() {\n      return {\n        filteredItems: this.filteredItems,\n        localItems: this.localItems,\n        localFilter: this.localFilter\n      }\n    },\n    // Sanitized/normalize filter-function prop\n    localFilterFn() {\n      // Return `null` to signal to use internal filter function\n      return isFunction(this.filterFunction) ? this.filterFunction : null\n    },\n    // Returns the records in `localItems` that match the filter criteria\n    // Returns the original `localItems` array if not sorting\n    filteredItems() {\n      const items = this.localItems || []\n      // Note the criteria is debounced and sanitized\n      const criteria = this.localFilter\n\n      // Resolve the filtering function, when requested\n      // We prefer the provided filtering function and fallback to the internal one\n      // When no filtering criteria is specified the filtering factories will return `null`\n      const filterFn = this.localFiltering\n        ? this.filterFnFactory(this.localFilterFn, criteria) ||\n          this.defaultFilterFnFactory(criteria)\n        : null\n\n      // We only do local filtering when requested and there are records to filter\n      return filterFn && items.length > 0 ? items.filter(filterFn) : items\n    }\n  },\n  watch: {\n    // Watch for debounce being set to 0\n    computedFilterDebounce(newVal, oldVal) {\n      if (!newVal && this.$_filterTimer) {\n        clearTimeout(this.$_filterTimer)\n        this.$_filterTimer = null\n        this.localFilter = this.filterSanitize(this.filter)\n      }\n    },\n    // Watch for changes to the filter criteria, and debounce if necessary\n    filter: {\n      // We need a deep watcher in case the user passes\n      // an object when using `filter-function`\n      deep: true,\n      handler(newCriteria, oldCriteria) {\n        const timeout = this.computedFilterDebounce\n        clearTimeout(this.$_filterTimer)\n        this.$_filterTimer = null\n        if (timeout && timeout > 0) {\n          // If we have a debounce time, delay the update of `localFilter`\n          this.$_filterTimer = setTimeout(() => {\n            this.localFilter = this.filterSanitize(newCriteria)\n          }, timeout)\n        } else {\n          // Otherwise, immediately update `localFilter` with `newFilter` value\n          this.localFilter = this.filterSanitize(newCriteria)\n        }\n      }\n    },\n    // Watch for changes to the filter criteria and filtered items vs `localItems`\n    // Set visual state and emit events as required\n    filteredCheck({ filteredItems, localItems, localFilter }) {\n      // Determine if the dataset is filtered or not\n      let isFiltered = false\n      if (!localFilter) {\n        // If filter criteria is falsey\n        isFiltered = false\n      } else if (looseEqual(localFilter, []) || looseEqual(localFilter, {})) {\n        // If filter criteria is an empty array or object\n        isFiltered = false\n      } else if (localFilter) {\n        // If filter criteria is truthy\n        isFiltered = true\n      }\n      if (isFiltered) {\n        this.$emit('filtered', filteredItems, filteredItems.length)\n      }\n      this.isFiltered = isFiltered\n    },\n    isFiltered(newVal, oldVal) {\n      if (newVal === false && oldVal === true) {\n        // We need to emit a filtered event if isFiltered transitions from true to\n        // false so that users can update their pagination controls.\n        this.$emit('filtered', this.localItems, this.localItems.length)\n      }\n    }\n  },\n  created() {\n    // Create non-reactive prop where we store the debounce timer id\n    this.$_filterTimer = null\n    // If filter is \"pre-set\", set the criteria\n    // This will trigger any watchers/dependents\n    // this.localFilter = this.filterSanitize(this.filter)\n    // Set the initial filtered state in a `$nextTick()` so that\n    // we trigger a filtered event if needed\n    this.$nextTick(() => {\n      this.isFiltered = Boolean(this.localFilter)\n    })\n  },\n  beforeDestroy() /* istanbul ignore next */ {\n    clearTimeout(this.$_filterTimer)\n    this.$_filterTimer = null\n  },\n  methods: {\n    filterSanitize(criteria) {\n      // Sanitizes filter criteria based on internal or external filtering\n      if (\n        this.localFiltering &&\n        !this.localFilterFn &&\n        !(isString(criteria) || isRegExp(criteria))\n      ) {\n        // If using internal filter function, which only accepts string or RegExp,\n        // return '' to signify no filter\n        return ''\n      }\n\n      // Could be a string, object or array, as needed by external filter function\n      // We use `cloneDeep` to ensure we have a new copy of an object or array\n      // without Vue's reactive observers\n      return cloneDeep(criteria)\n    },\n    // Filter Function factories\n    filterFnFactory(filterFn, criteria) {\n      // Wrapper factory for external filter functions\n      // Wrap the provided filter-function and return a new function\n      // Returns `null` if no filter-function defined or if criteria is falsey\n      // Rather than directly grabbing `this.computedLocalFilterFn` or `this.filterFunction`\n      // we have it passed, so that the caller computed prop will be reactive to changes\n      // in the original filter-function (as this routine is a method)\n      if (\n        !filterFn ||\n        !isFunction(filterFn) ||\n        !criteria ||\n        looseEqual(criteria, []) ||\n        looseEqual(criteria, {})\n      ) {\n        return null\n      }\n\n      // Build the wrapped filter test function, passing the criteria to the provided function\n      const fn = item => {\n        // Generated function returns true if the criteria matches part\n        // of the serialized data, otherwise false\n        return filterFn(item, criteria)\n      }\n\n      // Return the wrapped function\n      return fn\n    },\n    defaultFilterFnFactory(criteria) {\n      // Generates the default filter function, using the given filter criteria\n      // Returns `null` if no criteria or criteria format not supported\n      if (!criteria || !(isString(criteria) || isRegExp(criteria))) {\n        // Built in filter can only support strings or RegExp criteria (at the moment)\n        return null\n      }\n\n      // Build the regexp needed for filtering\n      let regexp = criteria\n      if (isString(regexp)) {\n        // Escape special `RegExp` characters in the string and convert contiguous\n        // whitespace to `\\s+` matches\n        const pattern = criteria\n          .replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n          .replace(/[\\s\\uFEFF\\xA0]+/g, '\\\\s+')\n        // Build the `RegExp` (no need for global flag, as we only need\n        // to find the value once in the string)\n        regexp = new RegExp(`.*${pattern}.*`, 'i')\n      }\n\n      // Generate the wrapped filter test function to use\n      const fn = item => {\n        // This searches all row values (and sub property values) in the entire (excluding\n        // special `_` prefixed keys), because we convert the record to a space-separated\n        // string containing all the value properties (recursively), even ones that are\n        // not visible (not specified in this.fields)\n        // Users can ignore filtering on specific fields, or on only certain fields,\n        // and can optionall specify searching results of fields with formatter\n        //\n        // TODO: Enable searching on scoped slots (optional, as it will be SLOW)\n        //\n        // Generated function returns true if the criteria matches part of\n        // the serialized data, otherwise false\n        // We set `lastIndex = 0` on the `RegExp` in case someone specifies the `/g` global flag\n        regexp.lastIndex = 0\n        return regexp.test(\n          stringifyRecordValues(\n            item,\n            this.computedFilterIgnored,\n            this.computedFilterIncluded,\n            this.computedFieldsObj\n          )\n        )\n      }\n\n      // Return the generated function\n      return fn\n    }\n  }\n}\n","/*\n * Consistent and stable sort function across JavaScript platforms\n *\n * Inconsistent sorts can cause SSR problems between client and server\n * such as in <b-table> if sortBy is applied to the data on server side render.\n * Chrome and V8 native sorts are inconsistent/unstable\n *\n * This function uses native sort with fallback to index compare when the a and b\n * compare returns 0\n *\n * Algorithm based on:\n * https://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript/45422645#45422645\n *\n * @param {array} array to sort\n * @param {function} sort compare function\n * @return {array}\n */\nconst stableSort = (array, compareFn) => {\n  // Using `.bind(compareFn)` on the wrapped anonymous function improves\n  // performance by avoiding the function call setup. We don't use an arrow\n  // function here as it binds `this` to the `stableSort` context rather than\n  // the `compareFn` context, which wouldn't give us the performance increase.\n  return array\n    .map((a, index) => [index, a])\n    .sort(\n      function(a, b) {\n        return this(a[1], b[1]) || a[0] - b[0]\n      }.bind(compareFn)\n    )\n    .map(e => e[1])\n}\n\nexport default stableSort\n","import { isArray, isObject } from './inspect'\n\n/**\n * Get property defined by dot/array notation in string.\n *\n * @link https://gist.github.com/jeneg/9767afdcca45601ea44930ea03e0febf#gistcomment-1935901\n *\n * @param {Object} obj\n * @param {string|Array} path\n * @param {*} defaultValue (optional)\n * @return {*}\n */\nconst get = (obj, path, defaultValue = null) => {\n  // Handle array of path values\n  path = isArray(path) ? path.join('.') : path\n\n  // If no path or no object passed\n  if (!path || !isObject(obj)) {\n    return defaultValue\n  }\n\n  // Handle edge case where user has dot(s) in top-level item field key\n  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2762\n  // Switched to `in` operator vs `hasOwnProperty` to handle obj.prototype getters\n  // https://github.com/bootstrap-vue/bootstrap-vue/issues/3463\n  if (path in obj) {\n    return obj[path]\n  }\n\n  // Handle string array notation (numeric indices only)\n  path = String(path).replace(/\\[(\\d+)]/g, '.$1')\n\n  const steps = path.split('.').filter(Boolean)\n\n  // Handle case where someone passes a string of only dots\n  if (steps.length === 0) {\n    return defaultValue\n  }\n\n  // Traverse path in object to find result\n  // We use `!=` vs `!==` to test for both `null` and `undefined`\n  // Switched to `in` operator vs `hasOwnProperty` to handle obj.prototype getters\n  // https://github.com/bootstrap-vue/bootstrap-vue/issues/3463\n  return steps.every(step => isObject(obj) && step in obj && (obj = obj[step]) != null)\n    ? obj\n    : defaultValue\n}\n\nexport default get\n","import get from '../../../utils/get'\nimport { isDate, isFunction, isNumber, isUndefinedOrNull } from '../../../utils/inspect'\nimport stringifyObjectValues from './stringify-object-values'\n\n// Default sort compare routine\n//\n// TODO: Add option to sort by multiple columns (tri-state per column,\n//       plus order of columns in sort)  where sortBy could be an array\n//       of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//       or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//       Multisort will most likely be handled in mixin-sort.js by\n//       calling this method for each sortBy\nconst defaultSortCompare = (a, b, sortBy, sortDesc, formatter, localeOpts, locale, nullLast) => {\n  let aa = get(a, sortBy, null)\n  let bb = get(b, sortBy, null)\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a)\n    bb = formatter(bb, sortBy, b)\n  }\n  aa = isUndefinedOrNull(aa) ? '' : aa\n  bb = isUndefinedOrNull(bb) ? '' : bb\n  if ((isDate(aa) && isDate(bb)) || (isNumber(aa) && isNumber(bb))) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting null/undefined/empty string last\n    return 1\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting null/undefined/empty string last\n    return -1\n  }\n  // Do localized string comparison\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOpts)\n}\n\nexport default defaultSortCompare\n","import stableSort from '../../../utils/stable-sort'\nimport startCase from '../../../utils/startcase'\nimport { arrayIncludes } from '../../../utils/array'\nimport { isFunction, isUndefinedOrNull } from '../../../utils/inspect'\nimport defaultSortCompare from './default-sort-compare'\n\nexport default {\n  props: {\n    sortBy: {\n      type: String,\n      default: ''\n    },\n    sortDesc: {\n      // TODO: Make this tri-state: true, false, null\n      type: Boolean,\n      default: false\n    },\n    sortDirection: {\n      // This prop is named incorrectly\n      // It should be `initialSortDirection` as it is a bit misleading\n      // (not to mention it screws up the ARIA label on the headers)\n      type: String,\n      default: 'asc',\n      validator: direction => arrayIncludes(['asc', 'desc', 'last'], direction)\n    },\n    sortCompare: {\n      type: Function,\n      default: null\n    },\n    sortCompareOptions: {\n      // Supported localCompare options, see `options` section of:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n      type: Object,\n      default: () => {\n        return { numeric: true }\n      }\n    },\n    sortCompareLocale: {\n      // String: locale code\n      // Array: array of Locale strings\n      type: [String, Array]\n      // default: undefined\n    },\n    sortNullLast: {\n      // Sort null and undefined to appear last\n      type: Boolean,\n      default: false\n    },\n    noSortReset: {\n      // Another prop that should have had a better name.\n      // It should be noSortClear (on non-sortable headers).\n      // We will need to make sure the documentation is clear on what\n      // this prop does (as well as in the code for future reference)\n      type: Boolean,\n      default: false\n    },\n    labelSortAsc: {\n      type: String,\n      default: 'Click to sort Ascending'\n    },\n    labelSortDesc: {\n      type: String,\n      default: 'Click to sort Descending'\n    },\n    labelSortClear: {\n      type: String,\n      default: 'Click to clear sorting'\n    },\n    noLocalSorting: {\n      type: Boolean,\n      default: false\n    },\n    noFooterSorting: {\n      type: Boolean,\n      default: false\n    },\n    sortIconLeft: {\n      // Place the sorting icon on the left of the header cells\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localSortBy: this.sortBy || '',\n      localSortDesc: this.sortDesc || false\n    }\n  },\n  computed: {\n    localSorting() {\n      return this.hasProvider ? !!this.noProviderSorting : !this.noLocalSorting\n    },\n    isSortable() {\n      return this.computedFields.some(f => f.sortable)\n    },\n    sortedItems() {\n      // Sorts the filtered items and returns a new array of the sorted items\n      // or the original items array if not sorted.\n      const items = (this.filteredItems || this.localItems || []).slice()\n      const sortBy = this.localSortBy\n      const sortDesc = this.localSortDesc\n      const sortCompare = this.sortCompare\n      const localSorting = this.localSorting\n      const sortOptions = { ...this.sortCompareOptions, usage: 'sort' }\n      const sortLocale = this.sortCompareLocale || undefined\n      const nullLast = this.sortNullLast\n      if (sortBy && localSorting) {\n        const field = this.computedFieldsObj[sortBy] || {}\n        const sortByFormatted = field.sortByFormatted\n        const formatter = isFunction(sortByFormatted)\n          ? sortByFormatted\n          : sortByFormatted\n            ? this.getFieldFormatter(sortBy)\n            : undefined\n        // `stableSort` returns a new array, and leaves the original array intact\n        return stableSort(items, (a, b) => {\n          let result = null\n          if (isFunction(sortCompare)) {\n            // Call user provided sortCompare routine\n            result = sortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale)\n          }\n          if (isUndefinedOrNull(result) || result === false) {\n            // Fallback to built-in defaultSortCompare if sortCompare\n            // is not defined or returns null/false\n            result = defaultSortCompare(\n              a,\n              b,\n              sortBy,\n              sortDesc,\n              formatter,\n              sortOptions,\n              sortLocale,\n              nullLast\n            )\n          }\n          // Negate result if sorting in descending order\n          return (result || 0) * (sortDesc ? -1 : 1)\n        })\n      }\n      return items\n    }\n  },\n  watch: {\n    isSortable(newVal, oldVal) /* istanbul ignore next: pain in the butt to test */ {\n      if (newVal) {\n        if (this.isSortable) {\n          this.$on('head-clicked', this.handleSort)\n        }\n      } else {\n        this.$off('head-clicked', this.handleSort)\n      }\n    },\n    sortDesc(newVal, oldVal) {\n      if (newVal === this.localSortDesc) {\n        /* istanbul ignore next */\n        return\n      }\n      this.localSortDesc = newVal || false\n    },\n    sortBy(newVal, oldVal) {\n      if (newVal === this.localSortBy) {\n        /* istanbul ignore next */\n        return\n      }\n      this.localSortBy = newVal || ''\n    },\n    // Update .sync props\n    localSortDesc(newVal, oldVal) {\n      // Emit update to sort-desc.sync\n      if (newVal !== oldVal) {\n        this.$emit('update:sortDesc', newVal)\n      }\n    },\n    localSortBy(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit('update:sortBy', newVal)\n      }\n    }\n  },\n  created() {\n    if (this.isSortable) {\n      this.$on('head-clicked', this.handleSort)\n    }\n  },\n  methods: {\n    // Handlers\n    // Need to move from thead-mixin\n    handleSort(key, field, evt, isFoot) {\n      if (!this.isSortable) {\n        /* istanbul ignore next */\n        return\n      }\n      if (isFoot && this.noFooterSorting) {\n        return\n      }\n      // TODO: make this tri-state sorting\n      // cycle desc => asc => none => desc => ...\n      let sortChanged = false\n      const toggleLocalSortDesc = () => {\n        const sortDirection = field.sortDirection || this.sortDirection\n        if (sortDirection === 'asc') {\n          this.localSortDesc = false\n        } else if (sortDirection === 'desc') {\n          this.localSortDesc = true\n        } else {\n          // sortDirection === 'last'\n          // Leave at last sort direction from previous column\n        }\n      }\n      if (field.sortable) {\n        if (key === this.localSortBy) {\n          // Change sorting direction on current column\n          this.localSortDesc = !this.localSortDesc\n        } else {\n          // Start sorting this column ascending\n          this.localSortBy = key\n          // this.localSortDesc = false\n          toggleLocalSortDesc()\n        }\n        sortChanged = true\n      } else if (this.localSortBy && !this.noSortReset) {\n        this.localSortBy = ''\n        toggleLocalSortDesc()\n        sortChanged = true\n      }\n      if (sortChanged) {\n        // Sorting parameters changed\n        this.$emit('sort-changed', this.context)\n      }\n    },\n    // methods to compute classes and attrs for thead>th cells\n    sortTheadThClasses(key, field, isFoot) {\n      return {\n        // If sortable and sortIconLeft are true, then place sort icon on the left\n        'b-table-sort-icon-left':\n          field.sortable && this.sortIconLeft && !(isFoot && this.noFooterSorting)\n      }\n    },\n    sortTheadThAttrs(key, field, isFoot) {\n      if (!this.isSortable || (isFoot && this.noFooterSorting)) {\n        // No attributes if not a sortable table\n        return {}\n      }\n      const sortable = field.sortable\n      let ariaLabel = ''\n      if ((!field.label || !field.label.trim()) && !field.headerTitle) {\n        // In case field's label and title are empty/blank, we need to\n        // add a hint about what the column is about for non-sighted users.\n        // This is duplicated code from tbody-row mixin, but we need it\n        // here as well, since we overwrite the original aria-label.\n        /* istanbul ignore next */\n        ariaLabel = startCase(key)\n      }\n      // The correctness of these labels is very important for screen-reader users.\n      let ariaLabelSorting = ''\n      if (sortable) {\n        if (this.localSortBy === key) {\n          // currently sorted sortable column.\n          ariaLabelSorting = this.localSortDesc ? this.labelSortAsc : this.labelSortDesc\n        } else {\n          // Not currently sorted sortable column.\n          // Not using nested ternary's here for clarity/readability\n          // Default for ariaLabel\n          ariaLabelSorting = this.localSortDesc ? this.labelSortDesc : this.labelSortAsc\n          // Handle sortDirection setting\n          const sortDirection = this.sortDirection || field.sortDirection\n          if (sortDirection === 'asc') {\n            ariaLabelSorting = this.labelSortAsc\n          } else if (sortDirection === 'desc') {\n            ariaLabelSorting = this.labelSortDesc\n          }\n        }\n      } else if (!this.noSortReset) {\n        // Non sortable column\n        ariaLabelSorting = this.localSortBy ? this.labelSortClear : ''\n      }\n      // Assemble the aria-label attribute value\n      ariaLabel = [ariaLabel.trim(), ariaLabelSorting.trim()].filter(Boolean).join(': ')\n      // Assemble the aria-sort attribute value\n      const ariaSort =\n        sortable && this.localSortBy === key\n          ? this.localSortDesc\n            ? 'descending'\n            : 'ascending'\n          : sortable\n            ? 'none'\n            : null\n      // Return the attributes\n      // (All the above just to get these two values)\n      return {\n        'aria-label': ariaLabel || null,\n        'aria-sort': ariaSort\n      }\n    }\n  }\n}\n","export default {\n  props: {\n    perPage: {\n      type: [Number, String],\n      default: 0\n    },\n    currentPage: {\n      type: [Number, String],\n      default: 1\n    }\n  },\n  computed: {\n    localPaging() {\n      return this.hasProvider ? !!this.noProviderPaging : true\n    },\n    paginatedItems() {\n      let items = this.sortedItems || this.filteredItems || this.localItems || []\n      const currentPage = Math.max(parseInt(this.currentPage, 10) || 1, 1)\n      const perPage = Math.max(parseInt(this.perPage, 10) || 0, 0)\n      // Apply local pagination\n      if (this.localPaging && !!perPage) {\n        // Grab the current page of data (which may be past filtered items limit)\n        items = items.slice((currentPage - 1) * perPage, currentPage * perPage)\n      }\n      // Return the items to display in the table\n      return items\n    }\n  }\n}\n","const stripTagsRegex = /(<([^>]+)>)/gi\n\n// Removes any thing that looks like an HTML tag from the supplied string\nexport const stripTags = (text = '') => String(text).replace(stripTagsRegex, '')\n\n// Generate a domProps object for either innerHTML, textContent or nothing\nexport const htmlOrText = (innerHTML, textContent) => {\n  return innerHTML ? { innerHTML } : textContent ? { textContent } : {}\n}\n","import { htmlOrText } from '../../../utils/html'\n\nexport default {\n  props: {\n    // `caption-top` is part of table-redere mixin (styling)\n    // captionTop: {\n    //   type: Boolean,\n    //   default: false\n    // },\n    caption: {\n      type: String,\n      default: null\n    },\n    captionHtml: {\n      type: String\n    }\n  },\n  computed: {\n    captionId() {\n      // Even though `this.safeId` looks like a method, it is a computed prop\n      // that returns a new function if the underlying ID changes\n      return this.isStacked ? this.safeId('_caption_') : null\n    }\n  },\n  methods: {\n    renderCaption() {\n      const h = this.$createElement\n\n      // Build the caption\n      const $captionSlot = this.normalizeSlot('table-caption')\n      let $caption = h()\n\n      if ($captionSlot || this.caption || this.captionHtml) {\n        const data = {\n          key: 'caption',\n          attrs: { id: this.captionId }\n        }\n        if (!$captionSlot) {\n          data.domProps = htmlOrText(this.captionHtml, this.caption)\n        }\n        $caption = h('caption', data, [$captionSlot])\n      }\n\n      return $caption\n    }\n  }\n}\n","export default {\n  methods: {\n    renderColgroup() {\n      const h = this.$createElement\n\n      const fields = this.computedFields\n      let $colgroup = h()\n\n      if (this.hasNormalizedSlot('table-colgroup')) {\n        $colgroup = h('colgroup', { key: 'colgroup' }, [\n          this.normalizeSlot('table-colgroup', { columns: fields.length, fields: fields })\n        ])\n      }\n\n      return $colgroup\n    }\n  }\n}\n","/*\n * Key Codes (events)\n */\n\nconst KEY_CODES = {\n  SPACE: 32,\n  ENTER: 13,\n  ESC: 27,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  PAGEUP: 33,\n  PAGEDOWN: 34,\n  HOME: 36,\n  END: 35,\n  TAB: 9,\n  SHIFT: 16,\n  CTRL: 17,\n  BACKSPACE: 8,\n  ALT: 18,\n  PAUSE: 19,\n  BREAK: 19,\n  INSERT: 45,\n  INS: 45,\n  DELETE: 46\n}\n\nexport default KEY_CODES\n","import { create } from './object'\n\nconst memoize = fn => {\n  const cache = create(null)\n\n  return (...args) => {\n    const argsKey = JSON.stringify(args)\n    return (cache[argsKey] = cache[argsKey] || fn.apply(null, args))\n  }\n}\n\nexport default memoize\n","import { deepFreeze } from './object'\n\n// --- General BootstrapVue configuration ---\n\n// NOTES\n//\n// The global config SHALL NOT be used to set defaults for Boolean props, as the props\n// would loose their semantic meaning, and force people writing 3rd party components to\n// explicity set a true or false value using the v-bind syntax on boolean props\n//\n// Supported config values (depending on the prop's supported type(s)):\n// `String`, `Array`, `Object`, `null` or `undefined`\n\n// BREAKPOINT DEFINITIONS\n//\n// Some components (`<b-col>` and `<b-form-group>`) generate props based on breakpoints,\n// and this occurs when the component is first loaded (evaluated), which may happen\n// before the config is created/modified\n//\n// To get around this we make these components' props async (lazy evaluation)\n// The component definition is only called/executed when the first access to the\n// component is used (and cached on subsequent uses)\n\n// PROP DEFAULTS\n//\n// For default values on props, we use the default value factory function approach so\n// that the default values are pulled in at each component instantiation\n//\n//  props: {\n//    variant: {\n//      type: String,\n//      default: () => getConfigComponent('BAlert', 'variant')\n//    }\n//  }\n//\n// We also provide a cached getter for breakpoints, which are \"frozen\" on first access\n\n// prettier-ignore\nexport default deepFreeze({\n  // Breakpoints\n  breakpoints: ['xs', 'sm', 'md', 'lg', 'xl'],\n\n  // Form controls\n  formControls: {\n    size: null\n  },\n\n  // Component specific defaults are keyed by the component\n  // name (PascalCase) and prop name (camelCase)\n  BAlert: {\n    dismissLabel: 'Close',\n    variant: 'info'\n  },\n  BBadge: {\n    variant: 'secondary'\n  },\n  BButton: {\n    size: null,\n    variant: 'secondary'\n  },\n  BButtonClose: {\n    // `textVariant` is `null` to inherit the current text color\n    textVariant: null,\n    ariaLabel: 'Close'\n  },\n  BCardSubTitle: {\n    // `<b-card>` and `<b-card-body>` also inherit this prop\n    subTitleTextVariant: 'muted'\n  },\n  BCarousel: {\n    labelPrev: 'Previous Slide',\n    labelNext: 'Next Slide',\n    labelGotoSlide: 'Goto Slide',\n    labelIndicators: 'Select a slide to display'\n  },\n  BDropdown: {\n    toggleText: 'Toggle Dropdown',\n    size: null,\n    variant: 'secondary',\n    splitVariant: null\n  },\n  BFormFile: {\n    browseText: 'Browse',\n    // Chrome default file prompt\n    placeholder: 'No file chosen',\n    dropPlaceholder: 'Drop files here'\n  },\n  BFormText: {\n    textVariant: 'muted'\n  },\n  BImg: {\n    blankColor: 'transparent'\n  },\n  BImgLazy: {\n    blankColor: 'transparent'\n  },\n  BInputGroup: {\n    size: null\n  },\n  BJumbotron: {\n    bgVariant: null,\n    borderVariant: null,\n    textVariant: null\n  },\n  BListGroupItem: {\n    variant: null\n  },\n  BModal: {\n    titleTag: 'h5',\n    size: 'md',\n    headerBgVariant: null,\n    headerBorderVariant: null,\n    headerTextVariant: null,\n    headerCloseVariant: null,\n    bodyBgVariant: null,\n    bodyTextVariant: null,\n    footerBgVariant: null,\n    footerBorderVariant: null,\n    footerTextVariant: null,\n    cancelTitle: 'Cancel',\n    cancelVariant: 'secondary',\n    okTitle: 'OK',\n    okVariant: 'primary',\n    headerCloseLabel: 'Close'\n  },\n  BNavbar: {\n    variant: null\n  },\n  BNavbarToggle: {\n    label: 'Toggle navigation'\n  },\n  BPagination: {\n    size: null\n  },\n  BPaginationNav: {\n    size: null\n  },\n  BPopover: {\n    boundary: 'scrollParent',\n    boundaryPadding: 5,\n    customClass: null,\n    delay: 50,\n    variant: null\n  },\n  BProgress: {\n    variant: null\n  },\n  BProgressBar: {\n    variant: null\n  },\n  BSpinner: {\n    variant: null\n  },\n  BTable: {\n    selectedVariant: 'active',\n    headVariant: null,\n    footVariant: null\n  },\n  BToast: {\n    toaster: 'b-toaster-top-right',\n    autoHideDelay: 5000,\n    variant: null,\n    toastClass: null,\n    headerClass: null,\n    bodyClass: null\n  },\n  BToaster: {\n    ariaLive: null,\n    ariaAtomic: null,\n    role: null\n  },\n  BTooltip: {\n    boundary: 'scrollParent',\n    boundaryPadding: 5,\n    customClass: null,\n    delay: 50,\n    variant: null\n  }\n})\n","import Vue from './vue'\nimport cloneDeep from './clone-deep'\nimport get from './get'\nimport memoize from './memoize'\nimport DEFAULTS from './config-defaults'\n\n// --- Constants ---\n\nconst PROP_NAME = '$bvConfig'\nconst VueProto = Vue.prototype\n\n// --- Getter methods ---\n// All methods return a deep clone (immutable) copy of the config\n// value, to prevent mutation of the user config object.\n\n// Get the current user config. For testing purposes only\nexport const getConfig = () => {\n  return VueProto[PROP_NAME] ? VueProto[PROP_NAME].getConfig() : {}\n}\n\n// Method to grab a config value based on a dotted/array notation key\nexport const getConfigValue = key => {\n  return VueProto[PROP_NAME]\n    ? VueProto[PROP_NAME].getConfigValue(key)\n    : cloneDeep(get(DEFAULTS, key))\n}\n\n// Method to grab a config value for a particular component\nexport const getComponentConfig = (cmpName, key = null) => {\n  // Return the particular config value for key for if specified,\n  // otherwise we return the full config (or an empty object if not found)\n  return key ? getConfigValue(`${cmpName}.${key}`) : getConfigValue(cmpName) || {}\n}\n\n// Convenience method for getting all breakpoint names\nexport const getBreakpoints = () => {\n  return getConfigValue('breakpoints')\n}\n\n// Private function for caching / locking-in breakpoint names\nconst _getBreakpointsCached = memoize(() => {\n  return getBreakpoints()\n})\n\n// Convenience method for getting all breakpoint names.\n// Caches the results after first access.\nexport const getBreakpointsCached = () => {\n  return cloneDeep(_getBreakpointsCached())\n}\n\n// Convenience method for getting breakpoints with\n// the smallest breakpoint set as ''.\n// Useful for components that create breakpoint specific props.\nexport const getBreakpointsUp = () => {\n  const breakpoints = getBreakpoints()\n  breakpoints[0] = ''\n  return breakpoints\n}\n\n// Convenience method for getting breakpoints with\n// the smallest breakpoint set as ''.\n// Useful for components that create breakpoint specific props.\n// Caches the results after first access.\nexport const getBreakpointsUpCached = memoize(() => {\n  const breakpoints = getBreakpointsCached()\n  breakpoints[0] = ''\n  return breakpoints\n})\n\n// Convenience method for getting breakpoints with\n// the largest breakpoint set as ''.\n// Useful for components that create breakpoint specific props.\nexport const getBreakpointsDown = () => {\n  const breakpoints = getBreakpoints()\n  breakpoints[breakpoints.length - 1] = ''\n  return breakpoints\n}\n\n// Convenience method for getting breakpoints with\n// the largest breakpoint set as ''.\n// Useful for components that create breakpoint specific props.\n// Caches the results after first access.\n/* istanbul ignore next: we don't use this method anywhere, yet */\nexport const getBreakpointsDownCached = () => /* istanbul ignore next */ {\n  const breakpoints = getBreakpointsCached()\n  breakpoints[breakpoints.length - 1] = ''\n  return breakpoints\n}\n","import { from as arrayFrom } from './array'\nimport { hasWindowSupport, hasDocumentSupport, hasPassiveEventSupport } from './env'\nimport { isFunction, isNull, isObject } from '../utils/inspect'\n\n// --- Constants ---\n\nconst w = hasWindowSupport ? window : {}\nconst d = hasDocumentSupport ? document : {}\nconst elProto = typeof Element !== 'undefined' ? Element.prototype : {}\n\n// --- Normalization utils ---\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n/* istanbul ignore next */\nexport const matchesEl =\n  elProto.matches || elProto.msMatchesSelector || elProto.webkitMatchesSelector\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n/* istanbul ignore next */\nexport const closestEl =\n  elProto.closest ||\n  function(sel) /* istanbul ignore next */ {\n    let el = this\n    do {\n      // Use our \"patched\" matches function\n      if (matches(el, sel)) {\n        return el\n      }\n      el = el.parentElement || el.parentNode\n    } while (!isNull(el) && el.nodeType === Node.ELEMENT_NODE)\n    return null\n  }\n\n// `requestAnimationFrame()` convenience method\nexport const requestAF =\n  w.requestAnimationFrame ||\n  w.webkitRequestAnimationFrame ||\n  w.mozRequestAnimationFrame ||\n  w.msRequestAnimationFrame ||\n  w.oRequestAnimationFrame ||\n  // Fallback, but not a true polyfill\n  // Only needed for Opera Mini\n  /* istanbul ignore next */\n  (cb => setTimeout(cb, 16))\n\nexport const MutationObs =\n  w.MutationObserver || w.WebKitMutationObserver || w.MozMutationObserver || null\n\n// --- Utils ---\n\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\nexport const parseEventOptions = options => {\n  /* istanbul ignore else: can't test in JSDOM, as it supports passive */\n  if (hasPassiveEventSupport) {\n    return isObject(options) ? options : { useCapture: Boolean(options || false) }\n  } else {\n    // Need to translate to actual Boolean value\n    return Boolean(isObject(options) ? options.useCapture : options)\n  }\n}\n\n// Attach an event listener to an element\nexport const eventOn = (el, evtName, handler, options) => {\n  if (el && el.addEventListener) {\n    el.addEventListener(evtName, handler, parseEventOptions(options))\n  }\n}\n\n// Remove an event listener from an element\nexport const eventOff = (el, evtName, handler, options) => {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(evtName, handler, parseEventOptions(options))\n  }\n}\n\n// Determine if an element is an HTML Element\nexport const isElement = el => Boolean(el && el.nodeType === Node.ELEMENT_NODE)\n\n// Determine if an HTML element is visible - Faster than CSS check\nexport const isVisible = el => {\n  if (!isElement(el) || !contains(d.body, el)) {\n    return false\n  }\n  if (el.style.display === 'none') {\n    // We do this check to help with vue-test-utils when using v-show\n    /* istanbul ignore next */\n    return false\n  }\n  // All browsers support getBoundingClientRect(), except JSDOM as it returns all 0's for values :(\n  // So any tests that need isVisible will fail in JSDOM\n  // Except when we override the getBCR prototype in some tests\n  const bcr = getBCR(el)\n  return Boolean(bcr && bcr.height > 0 && bcr.width > 0)\n}\n\n// Determine if an element is disabled\nexport const isDisabled = el =>\n  !isElement(el) || el.disabled || Boolean(getAttr(el, 'disabled')) || hasClass(el, 'disabled')\n\n// Cause/wait-for an element to reflow it's content (adjusting it's height/width)\nexport const reflow = el => {\n  // Requesting an elements offsetHight will trigger a reflow of the element content\n  /* istanbul ignore next: reflow doesn't happen in JSDOM */\n  return isElement(el) && el.offsetHeight\n}\n\n// Select all elements matching selector. Returns `[]` if none found\nexport const selectAll = (selector, root) =>\n  arrayFrom((isElement(root) ? root : d).querySelectorAll(selector))\n\n// Select a single element, returns `null` if not found\nexport const select = (selector, root) =>\n  (isElement(root) ? root : d).querySelector(selector) || null\n\n// Determine if an element matches a selector\nexport const matches = (el, selector) => {\n  if (!isElement(el)) {\n    return false\n  }\n  return matchesEl.call(el, selector)\n}\n\n// Finds closest element matching selector. Returns `null` if not found\nexport const closest = (selector, root, includeRoot = false) => {\n  if (!isElement(root)) {\n    return null\n  }\n  const el = closestEl.call(root, selector)\n\n  // Native closest behaviour when `includeRoot` is truthy,\n  // else emulate jQuery closest and return `null` if match is\n  // the passed in root element when `includeRoot` is falsey\n  return includeRoot ? el : el === root ? null : el\n}\n\n// Returns true if the parent element contains the child element\nexport const contains = (parent, child) => {\n  if (!parent || !isFunction(parent.contains)) {\n    return false\n  }\n  return parent.contains(child)\n}\n\n// Get an element given an ID\nexport const getById = id => d.getElementById(/^#/.test(id) ? id.slice(1) : id) || null\n\n// Add a class to an element\nexport const addClass = (el, className) => {\n  // We are checking for `el.classList` existence here since IE 11\n  // returns `undefined` for some elements (e.g. SVG elements)\n  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713\n  if (className && isElement(el) && el.classList) {\n    el.classList.add(className)\n  }\n}\n\n// Remove a class from an element\nexport const removeClass = (el, className) => {\n  // We are checking for `el.classList` existence here since IE 11\n  // returns `undefined` for some elements (e.g. SVG elements)\n  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713\n  if (className && isElement(el) && el.classList) {\n    el.classList.remove(className)\n  }\n}\n\n// Test if an element has a class\nexport const hasClass = (el, className) => {\n  // We are checking for `el.classList` existence here since IE 11\n  // returns `undefined` for some elements (e.g. SVG elements)\n  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713\n  if (className && isElement(el) && el.classList) {\n    return el.classList.contains(className)\n  }\n  return false\n}\n\n// Set an attribute on an element\nexport const setAttr = (el, attr, val) => {\n  if (attr && isElement(el)) {\n    el.setAttribute(attr, val)\n  }\n}\n\n// Remove an attribute from an element\nexport const removeAttr = (el, attr) => {\n  if (attr && isElement(el)) {\n    el.removeAttribute(attr)\n  }\n}\n\n// Get an attribute value from an element\n// Returns `null` if not found\nexport const getAttr = (el, attr) => (attr && isElement(el) ? el.getAttribute(attr) : null)\n\n// Determine if an attribute exists on an element\n// Returns `true` or `false`, or `null` if element not found\nexport const hasAttr = (el, attr) => (attr && isElement(el) ? el.hasAttribute(attr) : null)\n\n// Return the Bounding Client Rect of an element\n// Returns `null` if not an element\n/* istanbul ignore next: getBoundingClientRect() doesn't work in JSDOM */\nexport const getBCR = el => (isElement(el) ? el.getBoundingClientRect() : null)\n\n// Get computed style object for an element\n/* istanbul ignore next: getComputedStyle() doesn't work in JSDOM */\nexport const getCS = el => (hasWindowSupport && isElement(el) ? w.getComputedStyle(el) : {})\n\n// Returns a `Selection` object representing the range of text selected\n// Returns `null` if no window support is given\n/* istanbul ignore next: getSelection() doesn't work in JSDOM */\nexport const getSel = () => (hasWindowSupport && w.getSelection ? w.getSelection() : null)\n\n// Return an element's offset with respect to document element\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.offset\nexport const offset = el => /* istanbul ignore next: getBoundingClientRect(), getClientRects() doesn't work in JSDOM */ {\n  const _offset = { top: 0, left: 0 }\n  if (!isElement(el) || el.getClientRects().length === 0) {\n    return _offset\n  }\n  const bcr = getBCR(el)\n  if (bcr) {\n    const win = el.ownerDocument.defaultView\n    _offset.top = bcr.top + win.pageYOffset\n    _offset.left = bcr.left + win.pageXOffset\n  }\n  return _offset\n}\n\n// Return an element's offset with respect to to it's offsetParent\n// https://j11y.io/jquery/#v=git&fn=jQuery.fn.position\nexport const position = el => /* istanbul ignore next: getBoundingClientRect() doesn't work in JSDOM */ {\n  let _offset = { top: 0, left: 0 }\n  if (!isElement(el)) {\n    return _offset\n  }\n  let parentOffset = { top: 0, left: 0 }\n  const elStyles = getCS(el)\n  if (elStyles.position === 'fixed') {\n    _offset = getBCR(el) || _offset\n  } else {\n    _offset = offset(el)\n    const doc = el.ownerDocument\n    let offsetParent = el.offsetParent || doc.documentElement\n    while (\n      offsetParent &&\n      (offsetParent === doc.body || offsetParent === doc.documentElement) &&\n      getCS(offsetParent).position === 'static'\n    ) {\n      offsetParent = offsetParent.parentNode\n    }\n    if (offsetParent && offsetParent !== el && offsetParent.nodeType === Node.ELEMENT_NODE) {\n      parentOffset = offset(offsetParent)\n      const offsetParentStyles = getCS(offsetParent)\n      parentOffset.top += parseFloat(offsetParentStyles.borderTopWidth)\n      parentOffset.left += parseFloat(offsetParentStyles.borderLeftWidth)\n    }\n  }\n  return {\n    top: _offset.top - parentOffset.top - parseFloat(elStyles.marginTop),\n    left: _offset.left - parentOffset.left - parseFloat(elStyles.marginLeft)\n  }\n}\n","import { closest, getAttr, getById, matches, select } from '../../../utils/dom'\nimport { EVENT_FILTER } from './constants'\n\nconst TABLE_TAG_NAMES = ['TD', 'TH', 'TR']\n\n// Returns `true` if we should ignore the click/double-click/keypress event\n// Avoids having the user need to use `@click.stop` on the form control\nconst filterEvent = evt => {\n  // Exit early when we don't have a target element\n  if (!evt || !evt.target) {\n    /* istanbul ignore next */\n    return false\n  }\n  const el = evt.target\n  // Exit early when element is disabled or a table element\n  if (el.disabled || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {\n    return false\n  }\n  // Ignore the click when it was inside a dropdown menu\n  if (closest('.dropdown-menu', el)) {\n    return true\n  }\n  const label = el.tagName === 'LABEL' ? el : closest('label', el)\n  // If the label's form control is not disabled then we don't propagate event\n  // Modern browsers have `label.control` that references the associated input, but IE11\n  // does not have this property on the label element, so we resort to DOM lookups\n  if (label) {\n    const labelFor = getAttr(label, 'for')\n    const input = labelFor ? getById(labelFor) : select('input, select, textarea', label)\n    if (input && !input.disabled) {\n      return true\n    }\n  }\n  // Otherwise check if the event target matches one of the selectors in the\n  // event filter (i.e. anchors, non disabled inputs, etc.)\n  // Return `true` if we should ignore the event\n  return matches(el, EVENT_FILTER)\n}\n\nexport default filterEvent\n","import { getSel, isElement } from '../../../utils/dom'\n\n// Helper to determine if a there is an active text selection on the document page\n// Used to filter out click events caused by the mouse up at end of selection\n//\n// Accepts an element as only argument to test to see if selection overlaps or is\n// contained within the element\nconst textSelectionActive = (el = document) => {\n  const sel = getSel()\n  return sel && sel.toString().trim() !== '' && sel.containsNode && isElement(el)\n    ? sel.containsNode(el, true)\n    : false\n}\n\nexport default textSelectionActive\n","import Vue from '../../utils/vue'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nexport const props = {\n  headVariant: {\n    // Also sniffed by <b-tr> / <b-td> / <b-th>\n    type: String, // supported values: 'lite', 'dark', or null\n    default: null\n  }\n}\n\n// @vue/component\nexport const BThead = /*#__PURE__*/ Vue.extend({\n  name: 'BThead',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  provide() {\n    return {\n      bvTableRowGroup: this\n    }\n  },\n  inject: {\n    bvTable: {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      default() /* istanbul ignore next */ {\n        return {}\n      }\n    }\n  },\n  props,\n  computed: {\n    isThead() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return true\n    },\n    isDark() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.dark\n    },\n    isStacked() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isStacked\n    },\n    isResponsive() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isResponsive\n    },\n    isStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      // Sticky headers only apply to cells in table `thead`\n      return !this.isStacked && this.bvTable.stickyHeader\n    },\n    hasStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      return !this.isStacked && this.bvTable.stickyHeader\n    },\n    tableVariant() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.tableVariant\n    },\n    theadClasses() {\n      return [this.headVariant ? `thead-${this.headVariant}` : null]\n    },\n    theadAttrs() {\n      return { role: 'rowgroup', ...this.$attrs }\n    }\n  },\n  render(h) {\n    return h(\n      'thead',\n      {\n        class: this.theadClasses,\n        attrs: this.theadAttrs,\n        // Pass down any native listeners\n        on: this.$listeners\n      },\n      this.normalizeSlot('default', {})\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nexport const props = {\n  footVariant: {\n    type: String, // supported values: 'lite', 'dark', or null\n    default: null\n  }\n}\n\n// @vue/component\nexport const BTfoot = /*#__PURE__*/ Vue.extend({\n  name: 'BTfoot',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  provide() {\n    return {\n      bvTableRowGroup: this\n    }\n  },\n  inject: {\n    bvTable: {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      default() /* istanbul ignore next */ {\n        return {}\n      }\n    }\n  },\n  props,\n  computed: {\n    isTfoot() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return true\n    },\n    isDark() /* istanbul ignore next: Not currently sniffed in tests */ {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.dark\n    },\n    isStacked() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isStacked\n    },\n    isResponsive() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isResponsive\n    },\n    isStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Sticky headers are only supported in thead\n      return false\n    },\n    hasStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      return !this.isStacked && this.bvTable.stickyHeader\n    },\n    tableVariant() /* istanbul ignore next: Not currently sniffed in tests */ {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.tableVariant\n    },\n    tfootClasses() {\n      return [this.footVariant ? `thead-${this.footVariant}` : null]\n    },\n    tfootAttrs() {\n      return { role: 'rowgroup', ...this.$attrs }\n    }\n  },\n  render(h) {\n    return h(\n      'tfoot',\n      {\n        class: this.tfootClasses,\n        attrs: this.tfootAttrs,\n        // Pass down any native listeners\n        on: this.$listeners\n      },\n      this.normalizeSlot('default', {})\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nexport const props = {\n  variant: {\n    type: String,\n    default: null\n  }\n}\n\nconst LIGHT = 'light'\nconst DARK = 'dark'\n\n// @vue/component\nexport const BTr = /*#__PURE__*/ Vue.extend({\n  name: 'BTr',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  provide() {\n    return {\n      bvTableTr: this\n    }\n  },\n  inject: {\n    bvTableRowGroup: {\n      defaut() /* istanbul ignore next */ {\n        return {}\n      }\n    }\n  },\n  props,\n  computed: {\n    inTbody() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isTbody\n    },\n    inThead() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isThead\n    },\n    inTfoot() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isTfoot\n    },\n    isDark() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isDark\n    },\n    isStacked() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isStacked\n    },\n    isResponsive() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.isResponsive\n    },\n    isStickyHeader() {\n      // Sniffed by <b-td> / <b-th>\n      // Sticky headers are only supported in thead\n      return this.bvTableRowGroup.isStickyHeader\n    },\n    hasStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      return !this.isStacked && this.bvTableRowGroup.hasStickyHeader\n    },\n    tableVariant() {\n      // Sniffed by <b-td> / <b-th>\n      return this.bvTableRowGroup.tableVariant\n    },\n    headVariant() {\n      // Sniffed by <b-td> / <b-th>\n      return this.inThead ? this.bvTableRowGroup.headVariant : null\n    },\n    footVariant() {\n      // Sniffed by <b-td> / <b-th>\n      return this.inTfoot ? this.bvTableRowGroup.footVariant : null\n    },\n    isRowDark() {\n      return this.headVariant === LIGHT || this.footVariant === LIGHT\n        ? false\n        : this.headVariant === DARK || this.footVariant === DARK\n          ? true\n          : this.isDark\n    },\n    trClasses() {\n      return [this.variant ? `${this.isRowDark ? 'bg' : 'table'}-${this.variant}` : null]\n    },\n    trAttrs() {\n      return { role: 'row', ...this.$attrs }\n    }\n  },\n  render(h) {\n    return h(\n      'tr',\n      {\n        class: this.trClasses,\n        attrs: this.trAttrs,\n        // Pass native listeners to child\n        on: this.$listeners\n      },\n      this.normalizeSlot('default', {})\n    )\n  }\n})\n","import { isArray, isPlainObject, isUndefinedOrNull } from './inspect'\n\n/**\n * Convert a value to a string that can be rendered.\n */\nconst toString = (val, spaces = 2) => {\n  return isUndefinedOrNull(val)\n    ? ''\n    : isArray(val) || (isPlainObject(val) && val.toString === Object.prototype.toString)\n      ? JSON.stringify(val, null, spaces)\n      : String(val)\n}\n\nexport default toString\n","import Vue from '../../utils/vue'\nimport toString from '../../utils/to-string'\nimport { isUndefinedOrNull } from '../../utils/inspect'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nconst digitsRx = /^\\d+$/\n\n// Parse a rowspan or colspan into a digit (or null if < 1 or NaN)\nconst parseSpan = val => {\n  val = parseInt(val, 10)\n  return digitsRx.test(String(val)) && val > 0 ? val : null\n}\n\n/* istanbul ignore next */\nconst spanValidator = val => isUndefinedOrNull(val) || parseSpan(val) > 0\n\nexport const props = {\n  variant: {\n    type: String,\n    default: null\n  },\n  colspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  rowspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  stackedHeading: {\n    type: String,\n    default: null\n  },\n  stickyColumn: {\n    type: Boolean,\n    default: false\n  }\n}\n\n// @vue/component\nexport const BTd = /*#__PURE__*/ Vue.extend({\n  name: 'BTableCell',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  inject: {\n    bvTableTr: {\n      default() /* istanbul ignore next */ {\n        return {}\n      }\n    }\n  },\n  props,\n  computed: {\n    tag() {\n      // Overridden by <b-th>\n      return 'td'\n    },\n    inTbody() {\n      return this.bvTableTr.inTbody\n    },\n    inThead() {\n      return this.bvTableTr.inThead\n    },\n    inTfoot() {\n      return this.bvTableTr.inTfoot\n    },\n    isDark() {\n      return this.bvTableTr.isDark\n    },\n    isStacked() {\n      return this.bvTableTr.isStacked\n    },\n    isStackedCell() {\n      // We only support stacked-heading in tbody in stacked mode\n      return this.inTbody && this.isStacked\n    },\n    isResponsive() {\n      return this.bvTableTr.isResponsive\n    },\n    isStickyHeader() {\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      // Sticky headers only apply to cells in table `thead`\n      return this.bvTableTr.isStickyHeader\n    },\n    hasStickyHeader() {\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      return this.bvTableTr.hasStickyHeader\n    },\n    isStickyColumn() {\n      // Needed to handle background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      // Sticky column cells are only available in responsive\n      // mode (horizontal scrolling) or when sticky header mode\n      // Applies to cells in `thead`, `tbody` and `tfoot`\n      return !this.isStacked && (this.isResponsive || this.hasStickyHeader) && this.stickyColumn\n    },\n    rowVariant() {\n      return this.bvTableTr.variant\n    },\n    headVariant() {\n      return this.bvTableTr.headVariant\n    },\n    footVariant() /* istanbul ignore next: need to add in tests for footer variant */ {\n      return this.bvTableTr.footVariant\n    },\n    tableVariant() {\n      return this.bvTableTr.tableVariant\n    },\n    computedColspan() {\n      return parseSpan(this.colspan)\n    },\n    computedRowspan() {\n      return parseSpan(this.rowspan)\n    },\n    cellClasses() {\n      // We use computed props here for improved performance by caching\n      // the results of the string interpolation\n      // TODO: need to add handling for footVariant\n      let variant = this.variant\n      if (\n        (!variant && this.isStickyHeader && !this.headVariant) ||\n        (!variant && this.isStickyColumn)\n      ) {\n        // Needed for sticky-header mode as Bootstrap v4 table cells do\n        // not inherit parent's background-color. Boo!\n        variant = this.rowVariant || this.tableVariant || 'b-table-default'\n      }\n      return [\n        variant ? `${this.isDark ? 'bg' : 'table'}-${variant}` : null,\n        this.isStickyColumn ? 'b-table-sticky-column' : null\n      ]\n    },\n    cellAttrs() {\n      // We use computed props here for improved performance by caching\n      // the results of the object spread (Object.assign)\n      const headOrFoot = this.inThead || this.inTfoot\n      // Make sure col/rowspan's are > 0 or null\n      const colspan = this.computedColspan\n      const rowspan = this.computedRowspan\n      // Default role and scope\n      let role = 'cell'\n      let scope = null\n\n      // Compute role and scope\n      // We only add scopes with an explicit span of 1 or greater\n      if (headOrFoot) {\n        // Header or footer cells\n        role = 'columnheader'\n        scope = colspan > 0 ? 'colspan' : 'col'\n      } else if (this.tag === 'th') {\n        // th's in tbody\n        role = 'rowheader'\n        scope = rowspan > 0 ? 'rowgroup' : 'row'\n      }\n\n      return {\n        colspan: colspan,\n        rowspan: rowspan,\n        role: role,\n        scope: scope,\n        // Allow users to override role/scope plus add other attributes\n        ...this.$attrs,\n        // Add in the stacked cell label data-attribute if in\n        // stacked mode (if a stacked heading label is provided)\n        'data-label':\n          this.isStackedCell && !isUndefinedOrNull(this.stackedHeading)\n            ? toString(this.stackedHeading)\n            : null\n      }\n    }\n  },\n  render(h) {\n    const content = [this.normalizeSlot('default')]\n    return h(\n      this.tag,\n      {\n        class: this.cellClasses,\n        attrs: this.cellAttrs,\n        // Transfer any native listeners\n        on: this.$listeners\n      },\n      [this.isStackedCell ? h('div', [content]) : content]\n    )\n  }\n})\n","import Vue from '../../utils/vue'\nimport { BTd } from './td'\n\n// @vue/component\nexport const BTh = /*#__PURE__*/ Vue.extend({\n  name: 'BTh',\n  extends: BTd,\n  computed: {\n    tag() {\n      return 'th'\n    }\n  }\n})\n","import KeyCodes from '../../../utils/key-codes'\nimport startCase from '../../../utils/startcase'\nimport { getComponentConfig } from '../../../utils/config'\nimport { htmlOrText } from '../../../utils/html'\nimport { isUndefinedOrNull } from '../../../utils/inspect'\nimport filterEvent from './filter-event'\nimport textSelectionActive from './text-selection-active'\nimport { BThead } from '../thead'\nimport { BTfoot } from '../tfoot'\nimport { BTr } from '../tr'\nimport { BTh } from '../th'\n\nexport default {\n  props: {\n    headVariant: {\n      type: String, // 'light', 'dark' or `null` (or custom)\n      default: () => getComponentConfig('BTable', 'headVariant')\n    },\n    headRowVariant: {\n      type: String, // Any Bootstrap theme variant (or custom)\n      default: null\n    },\n    theadClass: {\n      type: [String, Array, Object]\n      // default: undefined\n    },\n    theadTrClass: {\n      type: [String, Array, Object]\n      // default: undefined\n    }\n  },\n  methods: {\n    fieldClasses(field) {\n      // Header field (<th>) classes\n      return [field.class ? field.class : '', field.thClass ? field.thClass : '']\n    },\n    headClicked(evt, field, isFoot) {\n      if (this.stopIfBusy && this.stopIfBusy(evt)) {\n        // If table is busy (via provider) then don't propagate\n        return\n      } else if (filterEvent(evt)) {\n        // Clicked on a non-disabled control so ignore\n        return\n      } else if (textSelectionActive(this.$el)) {\n        // User is selecting text, so ignore\n        /* istanbul ignore next: JSDOM doesn't support getSelection() */\n        return\n      }\n      evt.stopPropagation()\n      evt.preventDefault()\n      this.$emit('head-clicked', field.key, field, evt, isFoot)\n    },\n    renderThead(isFoot = false) {\n      const h = this.$createElement\n      const fields = this.computedFields || []\n\n      if (this.isStackedAlways || fields.length === 0) {\n        // In always stacked mode, we don't bother rendering the head/foot\n        // Or if no field headings (empty table)\n        return h()\n      }\n\n      // Reference to `selectAllRows` and `clearSelected()`, if table is selectable\n      const selectAllRows = this.isSelectable ? this.selectAllRows : () => {}\n      const clearSelected = this.isSelectable ? this.clearSelected : () => {}\n\n      // Helper function to generate a field <th> cell\n      const makeCell = (field, colIndex) => {\n        let ariaLabel = null\n        if (!field.label.trim() && !field.headerTitle) {\n          // In case field's label and title are empty/blank\n          // We need to add a hint about what the column is about for non-sighted users\n          /* istanbul ignore next */\n          ariaLabel = startCase(field.key)\n        }\n        const hasHeadClickListener = this.$listeners['head-clicked'] || this.isSortable\n        const handlers = {}\n        if (hasHeadClickListener) {\n          handlers.click = evt => {\n            this.headClicked(evt, field, isFoot)\n          }\n          handlers.keydown = evt => {\n            const keyCode = evt.keyCode\n            if (keyCode === KeyCodes.ENTER || keyCode === KeyCodes.SPACE) {\n              this.headClicked(evt, field, isFoot)\n            }\n          }\n        }\n        const sortAttrs = this.isSortable ? this.sortTheadThAttrs(field.key, field, isFoot) : {}\n        const sortClass = this.isSortable ? this.sortTheadThClasses(field.key, field, isFoot) : null\n        const data = {\n          key: field.key,\n          class: [this.fieldClasses(field), sortClass],\n          props: {\n            variant: field.variant,\n            stickyColumn: field.stickyColumn\n          },\n          style: field.thStyle || {},\n          attrs: {\n            // We only add a tabindex of 0 if there is a head-clicked listener\n            tabindex: hasHeadClickListener ? '0' : null,\n            abbr: field.headerAbbr || null,\n            title: field.headerTitle || null,\n            'aria-colindex': String(colIndex + 1),\n            'aria-label': ariaLabel,\n            ...this.getThValues(null, field.key, field.thAttr, isFoot ? 'foot' : 'head', {}),\n            ...sortAttrs\n          },\n          on: handlers\n        }\n        // Handle edge case where in-document templates are used with new\n        // `v-slot:name` syntax where the browser lower-cases the v-slot's\n        // name (attributes become lower cased when parsed by the browser)\n        // We have replaced the square bracket syntax with round brackets\n        // to prevent confusion with dynamic slot names\n        let slotNames = [`head(${field.key})`, `head(${field.key.toLowerCase()})`, 'head()']\n        if (isFoot) {\n          // Footer will fallback to header slot names\n          slotNames = [\n            `foot(${field.key})`,\n            `foot(${field.key.toLowerCase()})`,\n            'foot()',\n            ...slotNames\n          ]\n        }\n        const hasSlot = this.hasNormalizedSlot(slotNames)\n        let slot = field.label\n        if (hasSlot) {\n          slot = this.normalizeSlot(slotNames, {\n            label: field.label,\n            column: field.key,\n            field,\n            isFoot,\n            // Add in row select methods\n            selectAllRows,\n            clearSelected\n          })\n        } else {\n          data.domProps = htmlOrText(field.labelHtml)\n        }\n        return h(BTh, data, slot)\n      }\n\n      // Generate the array of <th> cells\n      const $cells = fields.map(makeCell).filter(th => th)\n\n      // Genrate the row(s)\n      const $trs = []\n      if (isFoot) {\n        const trProps = {\n          variant: isUndefinedOrNull(this.footRowVariant)\n            ? this.headRowVariant\n            : this.footRowVariant\n        }\n        $trs.push(h(BTr, { class: this.tfootTrClass, props: trProps }, $cells))\n      } else {\n        const scope = {\n          columns: fields.length,\n          fields: fields,\n          // Add in row select methods\n          selectAllRows,\n          clearSelected\n        }\n        $trs.push(this.normalizeSlot('thead-top', scope) || h())\n        $trs.push(\n          h(BTr, { class: this.theadTrClass, props: { variant: this.headRowVariant } }, $cells)\n        )\n      }\n\n      return h(\n        isFoot ? BTfoot : BThead,\n        {\n          key: isFoot ? 'bv-tfoot' : 'bv-thead',\n          class: (isFoot ? this.tfootClass : this.theadClass) || null,\n          props: isFoot\n            ? { footVariant: this.footVariant || this.headVariant || null }\n            : { headVariant: this.headVariant || null }\n        },\n        $trs\n      )\n    }\n  }\n}\n","import { getComponentConfig } from '../../../utils/config'\nimport { BTfoot } from '../tfoot'\n\nexport default {\n  props: {\n    footClone: {\n      type: Boolean,\n      default: false\n    },\n    footVariant: {\n      type: String, // 'dark', 'light', or `null` (or custom)\n      default: () => getComponentConfig('BTable', 'footVariant')\n    },\n    footRowVariant: {\n      type: String, // Any Bootstrap theme variant (or custom). Falls back to `headRowVariant`\n      default: null\n    },\n    tfootClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    tfootTrClass: {\n      type: [String, Array, Object],\n      default: null\n    }\n  },\n  methods: {\n    renderTFootCustom() {\n      const h = this.$createElement\n      if (this.hasNormalizedSlot('custom-foot')) {\n        return h(\n          BTfoot,\n          {\n            key: 'bv-tfoot-custom',\n            class: this.tfootClass || null,\n            props: { footVariant: this.footVariant || this.headVariant || null }\n          },\n          this.normalizeSlot('custom-foot', {\n            items: this.computedItems.slice(),\n            fields: this.computedFields.slice(),\n            columns: this.computedFields.length\n          })\n        )\n      } else {\n        return h()\n      }\n    },\n    renderTfoot() {\n      // Passing true to renderThead will make it render a tfoot\n      return this.footClone ? this.renderThead(true) : this.renderTFootCustom()\n    }\n  }\n}\n","import Vue from '../../utils/vue'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\nexport const props = {\n  tbodyTransitionProps: {\n    type: Object\n    // default: undefined\n  },\n  tbodyTransitionHandlers: {\n    type: Object\n    // default: undefined\n  }\n}\n\n// @vue/component\nexport const BTbody = /*#__PURE__*/ Vue.extend({\n  name: 'BTbody',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  provide() {\n    return {\n      bvTableRowGroup: this\n    }\n  },\n  inject: {\n    bvTable: {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      default() /* istanbul ignore next */ {\n        return {}\n      }\n    }\n  },\n  props,\n  computed: {\n    isTbody() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return true\n    },\n    isDark() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.dark\n    },\n    isStacked() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isStacked\n    },\n    isResponsive() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.isResponsive\n    },\n    isStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Sticky headers are only supported in thead\n      return false\n    },\n    hasStickyHeader() {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table CSS\n      return !this.isStacked && this.bvTable.stickyHeader\n    },\n    tableVariant() /* istanbul ignore next: Not currently sniffed in tests */ {\n      // Sniffed by <b-tr> / <b-td> / <b-th>\n      return this.bvTable.tableVariant\n    },\n    isTransitionGroup() {\n      return this.tbodyTransitionProps || this.tbodyTransitionHandlers\n    },\n    tbodyAttrs() {\n      return { role: 'rowgroup', ...this.$attrs }\n    },\n    tbodyProps() {\n      return this.tbodyTransitionProps ? { ...this.tbodyTransitionProps, tag: 'tbody' } : {}\n    }\n  },\n  render(h) {\n    const data = {\n      props: this.tbodyProps,\n      attrs: this.tbodyAttrs\n    }\n    if (this.isTransitionGroup) {\n      // We use native listeners if a transition group\n      // for any delegated events\n      data.on = this.tbodyTransitionHandlers || {}\n      data.nativeOn = this.$listeners || {}\n    } else {\n      // Otherwise we place any listeners on the tbody element\n      data.on = this.$listeners || {}\n    }\n    return h(\n      this.isTransitionGroup ? 'transition-group' : 'tbody',\n      data,\n      this.normalizeSlot('default', {})\n    )\n  }\n})\n","import get from '../../../utils/get'\nimport toString from '../../../utils/to-string'\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect'\nimport { BTr } from '../tr'\nimport { BTd } from '../td'\nimport { BTh } from '../th'\n\nconst detailsSlotName = 'row-details'\n\nexport default {\n  props: {\n    tbodyTrClass: {\n      type: [String, Array, Object, Function],\n      default: null\n    },\n    detailsTdClass: {\n      type: [String, Array, Object],\n      default: null\n    }\n  },\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues(item, key, tdValue, defValue) {\n      const parent = this.$parent\n      if (tdValue) {\n        const value = get(item, key, '')\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item)\n        } else if (isString(tdValue) && isFunction(parent[tdValue])) {\n          return parent[tdValue](value, key, item)\n        }\n        return tdValue\n      }\n      return defValue\n    },\n    getThValues(item, key, thValue, type, defValue) {\n      const parent = this.$parent\n      if (thValue) {\n        const value = get(item, key, '')\n        if (isFunction(thValue)) {\n          return thValue(value, key, item, type)\n        } else if (isString(thValue) && isFunction(parent[thValue])) {\n          return parent[thValue](value, key, item, type)\n        }\n        return thValue\n      }\n      return defValue\n    },\n    // Method to get the value for a field\n    getFormattedValue(item, field) {\n      const key = field.key\n      const formatter = this.getFieldFormatter(key)\n      let value = get(item, key, null)\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item)\n      }\n      return isUndefinedOrNull(value) ? '' : value\n    },\n    // Factory function methods\n    toggleDetailsFactory(hasDetailsSlot, item) {\n      // Returns a function to toggle a row's details slot\n      return () => {\n        if (hasDetailsSlot) {\n          this.$set(item, '_showDetails', !item._showDetails)\n        }\n      }\n    },\n    // Row event handlers\n    rowHovered(evt) {\n      // `mouseenter` handler (non-bubbling)\n      // `this.tbodyRowEvtStopped` from tbody mixin\n      if (!this.tbodyRowEvtStopped(evt)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent('row-hovered', evt)\n      }\n    },\n    rowUnhovered(evt) {\n      // `mouseleave` handler (non-bubbling)\n      // `this.tbodyRowEvtStopped` from tbody mixin\n      if (!this.tbodyRowEvtStopped(evt)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent('row-unhovered', evt)\n      }\n    },\n    // Render helpers\n    renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      // Renders a TD or TH for a row's field\n      const h = this.$createElement\n      const hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName)\n      const formatted = this.getFormattedValue(item, field)\n      const key = field.key\n      const stickyColumn =\n        !this.isStacked && (this.isResponsive || this.stickyHeader) && field.stickyColumn\n      // We only uses the helper components for sticky columns to\n      // improve performance of BTable/BTableLite by reducing the\n      // total number of vue instances created during render\n      const cellTag = stickyColumn\n        ? field.isRowHeader\n          ? BTh\n          : BTd\n        : field.isRowHeader\n          ? 'th'\n          : 'td'\n      const cellVariant =\n        item._cellVariants && item._cellVariants[key]\n          ? item._cellVariants[key]\n          : field.variant || null\n      const data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        key: `row-${rowIndex}-cell-${colIndex}-${key}`,\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {},\n        attrs: {\n          'aria-colindex': String(colIndex + 1),\n          ...(field.isRowHeader\n            ? this.getThValues(item, key, field.thAttr, 'row', {})\n            : this.getTdValues(item, key, field.tdAttr, {}))\n        }\n      }\n      if (stickyColumn) {\n        // We are using the helper BTd or BTh\n        data.props = {\n          stackedHeading: this.isStacked ? field.label : null,\n          stickyColumn: true,\n          variant: cellVariant\n        }\n      } else {\n        // Using native TD or TH element, so we need to\n        // add in the attributes and variant class\n        data.attrs['data-label'] =\n          this.isStacked && !isUndefinedOrNull(field.label) ? toString(field.label) : null\n        data.attrs.role = field.isRowHeader ? 'rowheader' : 'cell'\n        data.attrs.scope = field.isRowHeader ? 'row' : null\n        // Add in the variant class\n        if (cellVariant) {\n          data.class.push(`${this.dark ? 'bg' : 'table'}-${cellVariant}`)\n        }\n      }\n      const slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item._showDetails)\n      }\n      // If table supports selectable mode, then add in the following scope\n      // this.supportsSelectableRows will be undefined if mixin isn't loaded\n      if (this.supportsSelectableRows) {\n        slotScope.rowSelected = this.isRowSelected(rowIndex)\n        slotScope.selectRow = () => this.selectRow(rowIndex)\n        slotScope.unselectRow = () => this.unselectRow(rowIndex)\n      }\n      // The new `v-slot` syntax doesn't like a slot name starting with\n      // a square bracket and if using in-document HTML templates, the\n      // v-slot attributes are lower-cased by the browser.\n      // Switched to round bracket syntax to prevent confusion with\n      // dynamic slot name syntax.\n      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'\n      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`\n      // Will be `null` if no slot (or fallback slot) exists\n      const slotName = this.$_bodyFieldSlotNameCache[key]\n      let $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : toString(formatted)\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', {}, [$childNodes])]\n      }\n      // Render either a td or th cell\n      return h(cellTag, data, [$childNodes])\n    },\n    renderTbodyRow(item, rowIndex) {\n      // Renders an item's row (or rows if details supported)\n      const h = this.$createElement\n      const fields = this.computedFields\n      const tableStriped = this.striped\n      const hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName)\n      const rowShowDetails = Boolean(item._showDetails && hasDetailsSlot)\n      const hasRowClickHandler = this.$listeners['row-clicked'] || this.hasSelectableRowClick\n\n      // We can return more than one TR if rowDetails enabled\n      const $rows = []\n\n      // Details ID needed for `aria-details` when details showing\n      // We set it to `null` when not showing so that attribute\n      // does not appear on the element\n      const detailsId = rowShowDetails ? this.safeId(`_details_${rowIndex}_`) : null\n\n      // For each item data field in row\n      const $tds = fields.map((field, colIndex) => {\n        return this.renderTbodyRowCell(field, colIndex, item, rowIndex)\n      })\n\n      // Calculate the row number in the dataset (indexed from 1)\n      let ariaRowIndex = null\n      if (this.currentPage && this.perPage && this.perPage > 0) {\n        ariaRowIndex = String((this.currentPage - 1) * this.perPage + rowIndex + 1)\n      }\n\n      // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n      const primaryKey = this.primaryKey\n      const primaryKeyValue = toString(get(item, primaryKey)) || null\n      const rowKey = primaryKeyValue || String(rowIndex)\n\n      // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n      const rowId = primaryKeyValue ? this.safeId(`_row_${primaryKeyValue}`) : null\n\n      // Selectable classes and attributes\n      const selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {}\n      const selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}\n\n      // Add the item row\n      $rows.push(\n        h(\n          BTr,\n          {\n            key: `__b-table-row-${rowKey}__`,\n            ref: 'itemRows',\n            refInFor: true,\n            class: [\n              isFunction(this.tbodyTrClass) ? this.tbodyTrClass(item, 'row') : this.tbodyTrClass,\n              selectableClasses,\n              rowShowDetails ? 'b-table-has-details' : ''\n            ],\n            props: { variant: item._rowVariant || null },\n            attrs: {\n              id: rowId,\n              tabindex: hasRowClickHandler ? '0' : null,\n              'data-pk': primaryKeyValue || null,\n              'aria-details': detailsId,\n              'aria-owns': detailsId,\n              'aria-rowindex': ariaRowIndex,\n              ...selectableAttrs\n            },\n            on: {\n              // Note: These events are not A11Y friendly!\n              mouseenter: this.rowHovered,\n              mouseleave: this.rowUnhovered\n            }\n          },\n          $tds\n        )\n      )\n\n      // Row Details slot\n      if (rowShowDetails) {\n        const detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)\n        }\n        // If table supports selectable mode, then add in the following scope\n        // this.supportsSelectableRows will be undefined if mixin isn't loaded\n        if (this.supportsSelectableRows) {\n          detailsScope.rowSelected = this.isRowSelected(rowIndex)\n          detailsScope.selectRow = () => this.selectRow(rowIndex)\n          detailsScope.unselectRow = () => this.unselectRow(rowIndex)\n        }\n\n        // Render the details slot in a TD\n        const $details = h(BTd, { props: { colspan: fields.length }, class: this.detailsTdClass }, [\n          this.normalizeSlot(detailsSlotName, detailsScope)\n        ])\n\n        // Add a hidden row to keep table row striping consistent when details showing\n        // Only added if the table is striped\n        if (tableStriped) {\n          $rows.push(\n            // We don't use `BTr` here as we don't need the extra functionality\n            h('tr', {\n              key: `__b-table-details-stripe__${rowKey}`,\n              staticClass: 'd-none',\n              attrs: { 'aria-hidden': 'true', role: 'presentation' }\n            })\n          )\n        }\n\n        // Add the actual details row\n        $rows.push(\n          h(\n            BTr,\n            {\n              key: `__b-table-details__${rowKey}`,\n              staticClass: 'b-table-details',\n              class: [\n                isFunction(this.tbodyTrClass)\n                  ? this.tbodyTrClass(item, detailsSlotName)\n                  : this.tbodyTrClass\n              ],\n              props: { variant: item._rowVariant || null },\n              attrs: { id: detailsId, tabindex: '-1' }\n            },\n            [$details]\n          )\n        )\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h())\n        if (tableStriped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h())\n        }\n      }\n\n      // Return the row(s)\n      return $rows\n    }\n  }\n}\n","import KeyCodes from '../../../utils/key-codes'\nimport { arrayIncludes, from as arrayFrom } from '../../../utils/array'\nimport { closest, isElement } from '../../../utils/dom'\nimport { props as tbodyProps, BTbody } from '../tbody'\nimport filterEvent from './filter-event'\nimport textSelectionActive from './text-selection-active'\nimport tbodyRowMixin from './mixin-tbody-row'\n\nconst props = {\n  ...tbodyProps,\n  tbodyClass: {\n    type: [String, Array, Object]\n    // default: undefined\n  }\n}\n\nexport default {\n  mixins: [tbodyRowMixin],\n  props,\n  methods: {\n    // Helper methods\n    getTbodyTrs() {\n      // Returns all the item TR elements (excludes detail and spacer rows)\n      // `this.$refs.itemRows` is an array of item TR components/elements\n      // Rows should all be B-TR components, but we map to TR elements\n      // Also note that `this.$refs.itemRows` may not always be in document order\n      const tbody = this.$refs.tbody.$el || this.$refs.tbody\n      const trs = (this.$refs.itemRows || []).map(tr => tr.$el || tr)\n      // TODO: This may take time for tables many rows, so we may want to cache\n      //       the result of this during each render cycle on a non-reactive\n      //       property. We clear out the cache as each render starts, and\n      //       populate it on first access of this method if null\n      return arrayFrom(tbody.children).filter(tr => arrayIncludes(trs, tr))\n    },\n    getTbodyTrIndex(el) {\n      // Returns index of a particular TBODY item TR\n      // We set `true` on closest to include self in result\n      /* istanbul ignore next: should not normally happen */\n      if (!isElement(el)) {\n        return -1\n      }\n      const tr = el.tagName === 'TR' ? el : closest('tr', el, true)\n      return tr ? this.getTbodyTrs().indexOf(tr) : -1\n    },\n    emitTbodyRowEvent(type, evt) {\n      // Emits a row event, with the item object, row index and original event\n      if (type && evt && evt.target) {\n        const rowIndex = this.getTbodyTrIndex(evt.target)\n        if (rowIndex > -1) {\n          // The array of TRs correlate to the `computedItems` array\n          const item = this.computedItems[rowIndex]\n          this.$emit(type, item, rowIndex, evt)\n        }\n      }\n    },\n    tbodyRowEvtStopped(evt) {\n      return this.stopIfBusy && this.stopIfBusy(evt)\n    },\n    // Delegated row event handlers\n    onTbodyRowKeydown(evt) {\n      // Keyboard navigation and row click emulation\n      const target = evt.target\n      if (\n        this.tbodyRowEvtStopped(evt) ||\n        target.tagName !== 'TR' ||\n        target !== document.activeElement ||\n        target.tabIndex !== 0\n      ) {\n        // Early exit if not an item row TR\n        return\n      }\n      const keyCode = evt.keyCode\n      if (arrayIncludes([KeyCodes.ENTER, KeyCodes.SPACE], keyCode)) {\n        // Emulated click for keyboard users, transfer to click handler\n        evt.stopPropagation()\n        evt.preventDefault()\n        this.onTBodyRowClicked(evt)\n      } else if (\n        arrayIncludes([KeyCodes.UP, KeyCodes.DOWN, KeyCodes.HOME, KeyCodes.END], keyCode)\n      ) {\n        // Keyboard navigation\n        const rowIndex = this.getTbodyTrIndex(target)\n        if (rowIndex > -1) {\n          evt.stopPropagation()\n          evt.preventDefault()\n          const trs = this.getTbodyTrs()\n          const shift = evt.shiftKey\n          if (keyCode === KeyCodes.HOME || (shift && keyCode === KeyCodes.UP)) {\n            // Focus first row\n            trs[0].focus()\n          } else if (keyCode === KeyCodes.END || (shift && keyCode === KeyCodes.DOWN)) {\n            // Focus last row\n            trs[trs.length - 1].focus()\n          } else if (keyCode === KeyCodes.UP && rowIndex > 0) {\n            // Focus previous row\n            trs[rowIndex - 1].focus()\n          } else if (keyCode === KeyCodes.DOWN && rowIndex < trs.length - 1) {\n            // Focus next row\n            trs[rowIndex + 1].focus()\n          }\n        }\n      }\n    },\n    onTBodyRowClicked(evt) {\n      if (this.tbodyRowEvtStopped(evt)) {\n        // If table is busy, then don't propagate\n        return\n      } else if (filterEvent(evt) || textSelectionActive(this.$el)) {\n        // Clicked on a non-disabled control so ignore\n        // Or user is selecting text, so ignore\n        return\n      }\n      this.emitTbodyRowEvent('row-clicked', evt)\n    },\n    onTbodyRowMiddleMouseRowClicked(evt) {\n      if (!this.tbodyRowEvtStopped(evt) && evt.which === 2) {\n        this.emitTbodyRowEvent('row-middle-clicked', evt)\n      }\n    },\n    onTbodyRowContextmenu(evt) {\n      if (!this.tbodyRowEvtStopped(evt)) {\n        this.emitTbodyRowEvent('row-contextmenu', evt)\n      }\n    },\n    onTbodyRowDblClicked(evt) {\n      if (!this.tbodyRowEvtStopped(evt) && !filterEvent(evt)) {\n        this.emitTbodyRowEvent('row-dblclicked', evt)\n      }\n    },\n    // Note: Row hover handlers are handled by the tbody-row mixin\n    // As mouseenter/mouseleave events do not bubble\n    //\n    // Render Helper\n    renderTbody() {\n      // Render the tbody element and children\n      const items = this.computedItems\n      // Shortcut to `createElement` (could use `this._c()` instead)\n      const h = this.$createElement\n      const hasRowClickHandler = this.$listeners['row-clicked'] || this.hasSelectableRowClick\n\n      // Prepare the tbody rows\n      const $rows = []\n\n      // Add the item data rows or the busy slot\n      const $busy = this.renderBusy ? this.renderBusy() : null\n      if ($busy) {\n        // If table is busy and a busy slot, then return only the busy \"row\" indicator\n        $rows.push($busy)\n      } else {\n        // Table isn't busy, or we don't have a busy slot\n\n        // Create a slot cache for improved performance when looking up cell slot names\n        // Values will be keyed by the field's `key` and will store the slot's name\n        // Slots could be dynamic (i.e. `v-if`), so we must compute on each render\n        // Used by tbody-row mixin render helper\n        const cache = {}\n        const defaultSlotName = this.hasNormalizedSlot('cell()') ? 'cell()' : null\n        this.computedFields.forEach(field => {\n          const key = field.key\n          const fullName = `cell(${key})`\n          const lowerName = `cell(${key.toLowerCase()})`\n          cache[key] = this.hasNormalizedSlot(fullName)\n            ? fullName\n            : this.hasNormalizedSlot(lowerName)\n              ? lowerName\n              : defaultSlotName\n        })\n        // Created as a non-reactive property so to not trigger component updates\n        // Must be a fresh object each render\n        this.$_bodyFieldSlotNameCache = cache\n\n        // Add static top row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n        $rows.push(this.renderTopRow ? this.renderTopRow() : h())\n\n        // Render the rows\n        items.forEach((item, rowIndex) => {\n          // Render the individual item row (rows if details slot)\n          $rows.push(this.renderTbodyRow(item, rowIndex))\n        })\n\n        // Empty items / empty filtered row slot (only shows if `items.length < 1`)\n        $rows.push(this.renderEmpty ? this.renderEmpty() : h())\n\n        // Static bottom row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n        $rows.push(this.renderBottomRow ? this.renderBottomRow() : h())\n      }\n\n      const handlers = {\n        // TODO: We may want to to only instantiate these handlers\n        //       if there is an event listener registered\n        auxclick: this.onTbodyRowMiddleMouseRowClicked,\n        // TODO: Perhaps we do want to automatically prevent the\n        //       default context menu from showing if there is\n        //       a `row-contextmenu` listener registered.\n        contextmenu: this.onTbodyRowContextmenu,\n        // The following event(s) is not considered A11Y friendly\n        dblclick: this.onTbodyRowDblClicked\n        // hover events (mouseenter/mouseleave) ad handled by tbody-row mixin\n      }\n      if (hasRowClickHandler) {\n        handlers.click = this.onTBodyRowClicked\n        handlers.keydown = this.onTbodyRowKeydown\n      }\n      // Assemble rows into the tbody\n      const $tbody = h(\n        BTbody,\n        {\n          ref: 'tbody',\n          class: this.tbodyClass || null,\n          props: {\n            tbodyTransitionProps: this.tbodyTransitionProps,\n            tbodyTransitionHandlers: this.tbodyTransitionHandlers\n          },\n          // BTbody transfers all native event listeners to the root element\n          // TODO: Only set the handlers if the table is not busy\n          on: handlers\n        },\n        $rows\n      )\n\n      // Return the assembled tbody\n      return $tbody\n    }\n  }\n}\n","import { htmlOrText } from '../../../utils/html'\nimport { isFunction } from '../../../utils/inspect'\nimport { BTr } from '../tr'\nimport { BTd } from '../td'\n\nexport default {\n  props: {\n    showEmpty: {\n      type: Boolean,\n      default: false\n    },\n    emptyText: {\n      type: String,\n      default: 'There are no records to show'\n    },\n    emptyHtml: {\n      type: String\n    },\n    emptyFilteredText: {\n      type: String,\n      default: 'There are no records matching your request'\n    },\n    emptyFilteredHtml: {\n      type: String\n    }\n  },\n  methods: {\n    renderEmpty() {\n      const h = this.$createElement\n      const items = this.computedItems\n      let $empty\n\n      if (\n        this.showEmpty &&\n        (!items || items.length === 0) &&\n        !(this.computedBusy && this.hasNormalizedSlot('table-busy'))\n      ) {\n        $empty = this.normalizeSlot(this.isFiltered ? 'emptyfiltered' : 'empty', {\n          emptyFilteredHtml: this.emptyFilteredHtml,\n          emptyFilteredText: this.emptyFilteredText,\n          emptyHtml: this.emptyHtml,\n          emptyText: this.emptyText,\n          fields: this.computedFields,\n          // Not sure why this is included, as it will always be an empty array\n          items: this.computedItems\n        })\n        if (!$empty) {\n          $empty = h('div', {\n            class: ['text-center', 'my-2'],\n            domProps: this.isFiltered\n              ? htmlOrText(this.emptyFilteredHtml, this.emptyFilteredText)\n              : htmlOrText(this.emptyHtml, this.emptyText)\n          })\n        }\n        $empty = h(BTd, { props: { colspan: this.computedFields.length || null } }, [\n          h('div', { attrs: { role: 'alert', 'aria-live': 'polite' } }, [$empty])\n        ])\n        $empty = h(\n          BTr,\n          {\n            key: this.isFiltered ? 'b-empty-filtered-row' : 'b-empty-row',\n            staticClass: 'b-table-empty-row',\n            class: [\n              isFunction(this.tbodyTrClass)\n                ? this.tbodyTrClass(null, 'row-empty')\n                : this.tbodyTrClass\n            ]\n          },\n          [$empty]\n        )\n      }\n\n      return $empty || h()\n    }\n  }\n}\n","import { isFunction } from '../../../utils/inspect'\nimport { BTr } from '../tr'\n\nconst slotName = 'top-row'\n\nexport default {\n  methods: {\n    renderTopRow() {\n      const h = this.$createElement\n\n      // Add static Top Row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {\n        return h()\n      }\n\n      const fields = this.computedFields\n\n      return h(\n        BTr,\n        {\n          key: 'b-top-row',\n          staticClass: 'b-table-top-row',\n          class: [\n            isFunction(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-top') : this.tbodyTrClass\n          ]\n        },\n        [this.normalizeSlot(slotName, { columns: fields.length, fields: fields })]\n      )\n    }\n  }\n}\n","import { isFunction } from '../../../utils/inspect'\nimport { BTr } from '../tr'\n\nconst slotName = 'bottom-row'\n\nexport default {\n  methods: {\n    renderBottomRow() {\n      const h = this.$createElement\n\n      // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {\n        return h()\n      }\n\n      const fields = this.computedFields\n\n      return h(\n        BTr,\n        {\n          key: 'b-bottom-row',\n          staticClass: 'b-table-bottom-row',\n          class: [\n            isFunction(this.tbodyTrClass)\n              ? this.tbodyTrClass(null, 'row-bottom')\n              : this.tbodyTrClass\n          ]\n        },\n        this.normalizeSlot(slotName, { columns: fields.length, fields: fields })\n      )\n    }\n  }\n}\n","import { isFunction } from '../../../utils/inspect'\nimport { BTr } from '../tr'\nimport { BTd } from '../td'\n\nconst busySlotName = 'table-busy'\n\nexport default {\n  props: {\n    busy: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localBusy: false\n    }\n  },\n  computed: {\n    computedBusy() {\n      return this.busy || this.localBusy\n    }\n  },\n  watch: {\n    localBusy(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit('update:busy', newVal)\n      }\n    }\n  },\n  methods: {\n    // Event handler helper\n    stopIfBusy(evt) {\n      if (this.computedBusy) {\n        // If table is busy (via provider) then don't propagate\n        evt.preventDefault()\n        evt.stopPropagation()\n        return true\n      }\n      return false\n    },\n    // Render the busy indicator or return `null` if not busy\n    renderBusy() {\n      const h = this.$createElement\n\n      // Return a busy indicator row, or `null` if not busy\n      if (this.computedBusy && this.hasNormalizedSlot(busySlotName)) {\n        // Show the busy slot\n        return h(\n          BTr,\n          {\n            key: 'table-busy-slot',\n            staticClass: 'b-table-busy-slot',\n            class: [\n              isFunction(this.tbodyTrClass)\n                ? this.tbodyTrClass(null, busySlotName)\n                : this.tbodyTrClass\n            ]\n          },\n          [\n            h(BTd, { props: { colspan: this.computedFields.length || null } }, [\n              this.normalizeSlot(busySlotName)\n            ])\n          ]\n        )\n      } else {\n        // We return `null` here so that we can determine if we need to\n        // render the table items rows or not\n        return null\n      }\n    }\n  }\n}\n","/**\n * @param {number} length\n * @return {Array}\n */\nconst range = length => Array.apply(null, { length })\n\nexport default range\n","import looseEqual from '../../../utils/loose-equal'\nimport range from '../../../utils/range'\nimport { isArray, arrayIncludes } from '../../../utils/array'\nimport { getComponentConfig } from '../../../utils/config'\nimport { isNumber } from '../../../utils/inspect'\nimport sanitizeRow from './sanitize-row'\n\nexport default {\n  props: {\n    selectable: {\n      type: Boolean,\n      default: false\n    },\n    selectMode: {\n      type: String,\n      default: 'multi',\n      validator: val => arrayIncludes(['range', 'multi', 'single'], val)\n    },\n    selectedVariant: {\n      type: String,\n      default: () => getComponentConfig('BTable', 'selectedVariant')\n    },\n    noSelectOnClick: {\n      // Disable use of click handlers for row selection\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      selectedRows: [],\n      selectedLastRow: -1\n    }\n  },\n  computed: {\n    isSelectable() {\n      return this.selectable && this.selectMode\n    },\n    hasSelectableRowClick() {\n      return this.isSelectable && !this.noSelectOnClick\n    },\n    supportsSelectableRows() {\n      return true\n    },\n    selectableHasSelection() {\n      return (\n        this.isSelectable &&\n        this.selectedRows &&\n        this.selectedRows.length > 0 &&\n        this.selectedRows.some(Boolean)\n      )\n    },\n    selectableIsMultiSelect() {\n      return this.isSelectable && arrayIncludes(['range', 'multi'], this.selectMode)\n    },\n    selectableTableClasses() {\n      return {\n        'b-table-selectable': this.isSelectable,\n        [`b-table-select-${this.selectMode}`]: this.isSelectable,\n        'b-table-selecting': this.selectableHasSelection,\n        'b-table-selectable-no-click': this.isSelectable && !this.hasSelectableRowClick\n      }\n    },\n    selectableTableAttrs() {\n      return {\n        // TODO:\n        //   Should this attribute not be included when no-select-on-click is set\n        //   since this attribute implies keyboard navigation?\n        'aria-multiselectable': !this.isSelectable\n          ? null\n          : this.selectableIsMultiSelect\n            ? 'true'\n            : 'false'\n      }\n    }\n  },\n  watch: {\n    computedItems(newVal, oldVal) {\n      // Reset for selectable\n      let equal = false\n      if (this.isSelectable && this.selectedRows.length > 0) {\n        // Quick check against array length\n        equal = isArray(newVal) && isArray(oldVal) && newVal.length === oldVal.length\n        for (let i = 0; equal && i < newVal.length; i++) {\n          // Look for the first non-loosely equal row, after ignoring reserved fields\n          equal = looseEqual(sanitizeRow(newVal[i]), sanitizeRow(oldVal[i]))\n        }\n      }\n      if (!equal) {\n        this.clearSelected()\n      }\n    },\n    selectable(newVal, oldVal) {\n      this.clearSelected()\n      this.setSelectionHandlers(newVal)\n    },\n    selectMode(newVal, oldVal) {\n      this.clearSelected()\n    },\n    hasSelectableRowClick(newVal, oldVal) {\n      this.clearSelected()\n      this.setSelectionHandlers(!newVal)\n    },\n    selectedRows(selectedRows, oldVal) {\n      if (this.isSelectable && !looseEqual(selectedRows, oldVal)) {\n        const items = []\n        // `.forEach()` skips over non-existent indices (on sparse arrays)\n        selectedRows.forEach((v, idx) => {\n          if (v) {\n            items.push(this.computedItems[idx])\n          }\n        })\n        this.$emit('row-selected', items)\n      }\n    }\n  },\n  beforeMount() {\n    // Set up handlers if needed\n    if (this.isSelectable) {\n      this.setSelectionHandlers(true)\n    }\n  },\n  methods: {\n    // Public methods\n    selectRow(index) {\n      // Select a particular row (indexed based on computedItems)\n      if (\n        this.isSelectable &&\n        isNumber(index) &&\n        index >= 0 &&\n        index < this.computedItems.length &&\n        !this.isRowSelected(index)\n      ) {\n        const selectedRows = this.selectableIsMultiSelect ? this.selectedRows.slice() : []\n        selectedRows[index] = true\n        this.selectedLastClicked = -1\n        this.selectedRows = selectedRows\n      }\n    },\n    unselectRow(index) {\n      // Un-select a particular row (indexed based on `computedItems`)\n      if (this.isSelectable && isNumber(index) && this.isRowSelected(index)) {\n        const selectedRows = this.selectedRows.slice()\n        selectedRows[index] = false\n        this.selectedLastClicked = -1\n        this.selectedRows = selectedRows\n      }\n    },\n    selectAllRows() {\n      const length = this.computedItems.length\n      if (this.isSelectable && length > 0) {\n        this.selectedLastClicked = -1\n        this.selectedRows = this.selectableIsMultiSelect ? range(length).map(i => true) : [true]\n      }\n    },\n    isRowSelected(index) {\n      // Determine if a row is selected (indexed based on `computedItems`)\n      return Boolean(isNumber(index) && this.selectedRows[index])\n    },\n    clearSelected() {\n      // Clear any active selected row(s)\n      this.selectedLastClicked = -1\n      this.selectedRows = []\n    },\n    // Internal private methods\n    selectableRowClasses(index) {\n      if (this.isSelectable && this.isRowSelected(index)) {\n        const variant = this.selectedVariant\n        return {\n          'b-table-row-selected': true,\n          [`${this.dark ? 'bg' : 'table'}-${variant}`]: variant\n        }\n      } else {\n        return {}\n      }\n    },\n    selectableRowAttrs(index) {\n      return {\n        'aria-selected': !this.isSelectable ? null : this.isRowSelected(index) ? 'true' : 'false'\n      }\n    },\n    setSelectionHandlers(on) {\n      const method = on && !this.noSelectOnClick ? '$on' : '$off'\n      // Handle row-clicked event\n      this[method]('row-clicked', this.selectionHandler)\n      // Clear selection on filter, pagination, and sort changes\n      this[method]('filtered', this.clearSelected)\n      this[method]('context-changed', this.clearSelected)\n    },\n    selectionHandler(item, index, evt) {\n      /* istanbul ignore if: should never happen */\n      if (!this.isSelectable || this.noSelectOnClick) {\n        // Don't do anything if table is not in selectable mode\n        this.clearSelected()\n        return\n      }\n      const selectMode = this.selectMode\n      let selectedRows = this.selectedRows.slice()\n      let selected = !selectedRows[index]\n      // Note 'multi' mode needs no special event handling\n      if (selectMode === 'single') {\n        selectedRows = []\n      } else if (selectMode === 'range') {\n        if (this.selectedLastRow > -1 && evt.shiftKey) {\n          // range\n          for (\n            let idx = Math.min(this.selectedLastRow, index);\n            idx <= Math.max(this.selectedLastRow, index);\n            idx++\n          ) {\n            selectedRows[idx] = true\n          }\n          selected = true\n        } else {\n          if (!(evt.ctrlKey || evt.metaKey)) {\n            // Clear range selection if any\n            selectedRows = []\n            selected = true\n          }\n          this.selectedLastRow = selected ? index : -1\n        }\n      }\n      selectedRows[index] = selected\n      this.selectedRows = selectedRows\n    }\n  }\n}\n","/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\n// @vue/component\nexport default {\n  methods: {\n    /**\n     * Safely register event listeners on the root Vue node.\n     * While Vue automatically removes listeners for individual components,\n     * when a component registers a listener on root and is destroyed,\n     * this orphans a callback because the node is gone,\n     * but the root does not clear the callback.\n     *\n     * When registering a $root listener, it also registers a listener on\n     * the component's `beforeDestroy` hook to automatically remove the\n     * event listener from the $root instance.\n     *\n     * @param {string} event\n     * @param {function} callback\n     * @chainable\n     */\n    listenOnRoot(event, callback) {\n      this.$root.$on(event, callback)\n      this.$on('hook:beforeDestroy', () => {\n        this.$root.$off(event, callback)\n      })\n      // Return this for easy chaining\n      return this\n    },\n\n    /**\n     * Safely register a $once event listener on the root Vue node.\n     * While Vue automatically removes listeners for individual components,\n     * when a component registers a listener on root and is destroyed,\n     * this orphans a callback because the node is gone,\n     * but the root does not clear the callback.\n     *\n     * When registering a $root listener, it also registers a listener on\n     * the component's `beforeDestroy` hook to automatically remove the\n     * event listener from the $root instance.\n     *\n     * @param {string} event\n     * @param {function} callback\n     * @chainable\n     */\n    listenOnRootOnce(event, callback) {\n      this.$root.$once(event, callback)\n      this.$on('hook:beforeDestroy', () => {\n        this.$root.$off(event, callback)\n      })\n      // Return this for easy chaining\n      return this\n    },\n\n    /**\n     * Convenience method for calling vm.$emit on vm.$root.\n     * @param {string} event\n     * @param {*} args\n     * @chainable\n     */\n    emitOnRoot(event, ...args) {\n      this.$root.$emit(event, ...args)\n      // Return this for easy chaining\n      return this\n    }\n  }\n}\n","import looseEqual from '../../../utils/loose-equal'\nimport warn from '../../../utils/warn'\nimport { isArray, isFunction, isPromise } from '../../../utils/inspect'\nimport { clone } from '../../../utils/object'\nimport listenOnRootMixin from '../../../mixins/listen-on-root'\n\nexport default {\n  mixins: [listenOnRootMixin],\n  props: {\n    // Prop override(s)\n    items: {\n      // Adds in 'Function' support\n      type: [Array, Function],\n      default() /* istanbul ignore next */ {\n        return []\n      }\n    },\n    // Additional props\n    noProviderPaging: {\n      type: Boolean,\n      default: false\n    },\n    noProviderSorting: {\n      type: Boolean,\n      default: false\n    },\n    noProviderFiltering: {\n      type: Boolean,\n      default: false\n    },\n    apiUrl: {\n      // Passthrough prop. Passed to the context object. Not used by b-table directly\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    hasProvider() {\n      return isFunction(this.items)\n    },\n    providerTriggerContext() {\n      // Used to trigger the provider function via a watcher. Only the fields that\n      // are needed for triggering a provider update are included. Note that the\n      // regular this.context is sent to the provider during fetches though, as they\n      // may need all the prop info.\n      const ctx = {\n        apiUrl: this.apiUrl,\n        filter: null,\n        sortBy: null,\n        sortDesc: null,\n        perPage: null,\n        currentPage: null\n      }\n      if (!this.noProviderFiltering) {\n        // Either a string, or could be an object or array.\n        ctx.filter = this.localFilter\n      }\n      if (!this.noProviderSorting) {\n        ctx.sortBy = this.localSortBy\n        ctx.sortDesc = this.localSortDesc\n      }\n      if (!this.noProviderPaging) {\n        ctx.perPage = this.perPage\n        ctx.currentPage = this.currentPage\n      }\n      return clone(ctx)\n    }\n  },\n  watch: {\n    // Provider update triggering\n    items(newVal, oldVal) {\n      // If a new provider has been specified, trigger an update\n      if (this.hasProvider || isFunction(newVal)) {\n        this.$nextTick(this._providerUpdate)\n      }\n    },\n    providerTriggerContext(newVal, oldVal) {\n      // Trigger the provider to update as the relevant context values have changed.\n      if (!looseEqual(newVal, oldVal)) {\n        this.$nextTick(this._providerUpdate)\n      }\n    }\n  },\n  mounted() {\n    // Call the items provider if necessary\n    if (this.hasProvider && (!this.localItems || this.localItems.length === 0)) {\n      // Fetch on mount if localItems is empty\n      this._providerUpdate()\n    }\n    // Listen for global messages to tell us to force refresh the table\n    this.listenOnRoot('bv::refresh::table', id => {\n      if (id === this.id || id === this) {\n        this.refresh()\n      }\n    })\n  },\n  methods: {\n    refresh() {\n      // Public Method: Force a refresh of the provider function\n      this.$off('refreshed', this.refresh)\n      if (this.computedBusy) {\n        // Can't force an update when forced busy by user (busy prop === true)\n        if (this.localBusy && this.hasProvider) {\n          // But if provider running (localBusy), re-schedule refresh once `refreshed` emitted\n          this.$on('refreshed', this.refresh)\n        }\n      } else {\n        this.clearSelected()\n        if (this.hasProvider) {\n          this.$nextTick(this._providerUpdate)\n        } else {\n          /* istanbul ignore next */\n          this.localItems = isArray(this.items) ? this.items.slice() : []\n        }\n      }\n    },\n    // Provider related methods\n    _providerSetLocal(items) {\n      this.localItems = isArray(items) ? items.slice() : []\n      this.localBusy = false\n      this.$emit('refreshed')\n      // New root emit\n      if (this.id) {\n        this.emitOnRoot('bv::table::refreshed', this.id)\n      }\n    },\n    _providerUpdate() {\n      // Refresh the provider function items.\n      if (!this.hasProvider) {\n        // Do nothing if no provider\n        return\n      }\n      // If table is busy, wait until refreshed before calling again\n      if (this.computedBusy) {\n        // Schedule a new refresh once `refreshed` is emitted\n        this.$nextTick(this.refresh)\n        return\n      }\n\n      // Set internal busy state\n      this.localBusy = true\n\n      // Call provider function with context and optional callback after DOM is fully updated\n      this.$nextTick(() => {\n        try {\n          // Call provider function passing it the context and optional callback\n          const data = this.items(this.context, this._providerSetLocal)\n          if (isPromise(data)) {\n            // Provider returned Promise\n            data.then(items => {\n              // Provider resolved with items\n              this._providerSetLocal(items)\n            })\n          } else if (isArray(data)) {\n            // Provider returned Array data\n            this._providerSetLocal(data)\n          } else {\n            /* istanbul ignore if */\n            if (this.items.length !== 2) {\n              // Check number of arguments provider function requested\n              // Provider not using callback (didn't request second argument), so we clear\n              // busy state as most likely there was an error in the provider function\n              /* istanbul ignore next */\n              warn(\n                \"b-table provider function didn't request callback and did not return a promise or data\"\n              )\n              this.localBusy = false\n            }\n          }\n        } catch (e) /* istanbul ignore next */ {\n          // Provider function borked on us, so we spew out a warning\n          // and clear the busy state\n          warn(`b-table provider function error [${e.name}] ${e.message}`)\n          this.localBusy = false\n          this.$off('refreshed', this.refresh)\n        }\n      })\n    }\n  }\n}\n","import { isBoolean } from '../../../utils/inspect'\n\n// Main `<table>` render mixin\n// Includes all main table styling options\n\nexport default {\n  // Don't place attributes on root element automatically,\n  // as table could be wrapped in responsive `<div>`\n  inheritAttrs: false,\n  provide() {\n    return {\n      bvTable: this\n    }\n  },\n  props: {\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    borderless: {\n      type: Boolean,\n      default: false\n    },\n    outlined: {\n      type: Boolean,\n      default: false\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    responsive: {\n      type: [Boolean, String],\n      default: false\n    },\n    stickyHeader: {\n      // If a string, it is assumed to be the table `max-height` value\n      type: [Boolean, String],\n      default: false\n    },\n    noBorderCollapse: {\n      type: Boolean,\n      default: false\n    },\n    captionTop: {\n      type: Boolean,\n      default: false\n    },\n    tableVariant: {\n      type: String,\n      default: null\n    },\n    tableClass: {\n      type: [String, Array, Object],\n      default: null\n    }\n  },\n  computed: {\n    // Layout related computed props\n    isResponsive() {\n      const responsive = this.responsive === '' ? true : this.responsive\n      return this.isStacked ? false : responsive\n    },\n    isStickyHeader() {\n      const stickyHeader = this.stickyHeader === '' ? true : this.stickyHeader\n      return this.isStacked ? false : stickyHeader\n    },\n    wrapperClasses() {\n      return [\n        this.isStickyHeader ? 'b-table-sticky-header' : '',\n        this.isResponsive === true\n          ? 'table-responsive'\n          : this.isResponsive\n            ? `table-responsive-${this.responsive}`\n            : ''\n      ].filter(Boolean)\n    },\n    wrapperStyles() {\n      return this.isStickyHeader && !isBoolean(this.isStickyHeader)\n        ? { maxHeight: this.isStickyHeader }\n        : {}\n    },\n    tableClasses() {\n      const hover = this.isTableSimple\n        ? this.hover\n        : this.hover && this.computedItems.length > 0 && !this.computedBusy\n\n      return [\n        // User supplied classes\n        this.tableClass,\n        // Styling classes\n        {\n          'table-striped': this.striped,\n          'table-hover': hover,\n          'table-dark': this.dark,\n          'table-bordered': this.bordered,\n          'table-borderless': this.borderless,\n          'table-sm': this.small,\n          // The following are b-table custom styles\n          border: this.outlined,\n          'b-table-fixed': this.fixed,\n          'b-table-caption-top': this.captionTop,\n          'b-table-no-border-collapse': this.noBorderCollapse\n        },\n        this.tableVariant ? `${this.dark ? 'bg' : 'table'}-${this.tableVariant}` : '',\n        // Stacked table classes\n        this.stackedTableClasses,\n        // Selectable classes\n        this.selectableTableClasses\n      ]\n    },\n    tableAttrs() {\n      // Preserve user supplied aria-describedby, if provided in `$attrs`\n      const adb =\n        [(this.$attrs || {})['aria-describedby'], this.captionId].filter(Boolean).join(' ') || null\n      const items = this.computedItems\n      const filteredItems = this.filteredItems\n      const fields = this.computedFields\n      const selectableAttrs = this.selectableTableAttrs || {}\n      const ariaAttrs = this.isTableSimple\n        ? {}\n        : {\n            'aria-busy': this.computedBusy ? 'true' : 'false',\n            'aria-colcount': String(fields.length),\n            'aria-describedby': adb\n          }\n      const rowCount =\n        items && filteredItems && filteredItems.length > items.length\n          ? String(filteredItems.length)\n          : null\n\n      return {\n        // We set `aria-rowcount` before merging in `$attrs`,\n        // in case user has supplied their own\n        'aria-rowcount': rowCount,\n        // Merge in user supplied `$attrs` if any\n        ...this.$attrs,\n        // Now we can override any `$attrs` here\n        id: this.safeId(),\n        role: 'table',\n        ...ariaAttrs,\n        ...selectableAttrs\n      }\n    }\n  },\n  render(h) {\n    const $content = []\n\n    if (this.isTableSimple) {\n      $content.push(this.normalizeSlot('default', {}))\n    } else {\n      // Build the `<caption>` (from caption mixin)\n      $content.push(this.renderCaption ? this.renderCaption() : null)\n\n      // Build the `<colgroup>`\n      $content.push(this.renderColgroup ? this.renderColgroup() : null)\n\n      // Build the `<thead>`\n      $content.push(this.renderThead ? this.renderThead() : null)\n\n      // Build the `<tbody>`\n      $content.push(this.renderTbody ? this.renderTbody() : null)\n\n      // Build the `<tfoot>`\n      $content.push(this.renderTfoot ? this.renderTfoot() : null)\n    }\n\n    // Assemble `<table>`\n    const $table = h(\n      'table',\n      {\n        key: 'b-table',\n        staticClass: 'table b-table',\n        class: this.tableClasses,\n        attrs: this.tableAttrs\n      },\n      $content.filter(Boolean)\n    )\n\n    // Add responsive/sticky wrapper if needed and return table\n    return this.wrapperClasses.length > 0\n      ? h('div', { key: 'wrap', class: this.wrapperClasses, style: this.wrapperStyles }, [$table])\n      : $table\n  }\n}\n","import Vue from '../../utils/vue'\n\n// Mixins\nimport idMixin from '../../mixins/id'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\n// Table helper Mixins\nimport itemsMixin from './helpers/mixin-items'\nimport stackedMixin from './helpers/mixin-stacked'\nimport filteringMixin from './helpers/mixin-filtering'\nimport sortingMixin from './helpers/mixin-sorting'\nimport paginationMixin from './helpers/mixin-pagination'\nimport captionMixin from './helpers/mixin-caption'\nimport colgroupMixin from './helpers/mixin-colgroup'\nimport theadMixin from './helpers/mixin-thead'\nimport tfootMixin from './helpers/mixin-tfoot'\nimport tbodyMixin from './helpers/mixin-tbody'\nimport emptyMixin from './helpers/mixin-empty'\nimport topRowMixin from './helpers/mixin-top-row'\nimport bottomRowMixin from './helpers/mixin-bottom-row'\nimport busyMixin from './helpers/mixin-busy'\nimport selectableMixin from './helpers/mixin-selectable'\nimport providerMixin from './helpers/mixin-provider'\n\n// Main table renderer mixin\nimport tableRendererMixin from './helpers/mixin-table-renderer'\n\n// b-table component definition\n// @vue/component\nexport const BTable = /*#__PURE__*/ Vue.extend({\n  name: 'BTable',\n  // Order of mixins is important!\n  // They are merged from first to last, followed by this component.\n  mixins: [\n    // Required Mixins\n    idMixin,\n    normalizeSlotMixin,\n    itemsMixin,\n    tableRendererMixin,\n    stackedMixin,\n    theadMixin,\n    tfootMixin,\n    tbodyMixin,\n    // Features Mixins\n    stackedMixin,\n    filteringMixin,\n    sortingMixin,\n    paginationMixin,\n    captionMixin,\n    colgroupMixin,\n    selectableMixin,\n    emptyMixin,\n    topRowMixin,\n    bottomRowMixin,\n    busyMixin,\n    providerMixin\n  ]\n  // render function provided by table-renderer mixin\n})\n","import Vue from '../../utils/vue'\n\n// Mixins\nimport idMixin from '../../mixins/id'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\n// Table helper Mixins\nimport itemsMixin from './helpers/mixin-items'\nimport captionMixin from './helpers/mixin-caption'\nimport colgroupMixin from './helpers/mixin-colgroup'\nimport stackedMixin from './helpers/mixin-stacked'\nimport theadMixin from './helpers/mixin-thead'\nimport tfootMixin from './helpers/mixin-tfoot'\nimport tbodyMixin from './helpers/mixin-tbody'\n\n// Main table renderer mixin\nimport tableRendererMixin from './helpers/mixin-table-renderer'\n\n// b-table-lite component definition\n// @vue/component\nexport const BTableLite = /*#__PURE__*/ Vue.extend({\n  name: 'BTableLite',\n  // Order of mixins is important!\n  // They are merged from first to last, followed by this component.\n  mixins: [\n    // Required mixins\n    idMixin,\n    normalizeSlotMixin,\n    itemsMixin,\n    tableRendererMixin,\n    stackedMixin,\n    theadMixin,\n    tfootMixin,\n    tbodyMixin,\n    // Features Mixins\n    // These are pretty lightweight, and are useful for lightweight tables\n    captionMixin,\n    colgroupMixin\n  ]\n  // render function provided by table-renderer mixin\n})\n","import Vue from '../../utils/vue'\n\n// Mixins\nimport idMixin from '../../mixins/id'\nimport normalizeSlotMixin from '../../mixins/normalize-slot'\n\n// Main table renderer mixin\nimport tableRendererMixin from './helpers/mixin-table-renderer'\n\n// Feature miins\nimport stackedMixin from './helpers/mixin-stacked'\n\n// b-table-simple component definition\n// @vue/component\nexport const BTableSimple = /*#__PURE__*/ Vue.extend({\n  name: 'BTableSimple',\n  // Order of mixins is important!\n  // They are merged from first to last, followed by this component.\n  mixins: [\n    // Required mixins\n    idMixin,\n    normalizeSlotMixin,\n    tableRendererMixin,\n    // feature mixin\n    // Stacked requires extra handling by users via\n    // the table cell `stacked-heading` prop\n    stackedMixin\n  ],\n  computed: {\n    isTableSimple() {\n      return true\n    }\n  }\n  // render function provided by table-renderer mixin\n})\n","import OurVue from './vue'\nimport cloneDeep from './clone-deep'\nimport get from './get'\nimport warn from './warn'\nimport { isArray, isPlainObject, isString, isUndefined } from './inspect'\nimport { getOwnPropertyNames, hasOwnProperty } from './object'\nimport DEFAULTS from './config-defaults'\n\n// --- Constants ---\n\nconst PROP_NAME = '$bvConfig'\n\n// Config manager class\nclass BvConfig {\n  constructor() {\n    // TODO: pre-populate with default config values (needs updated tests)\n    // this.$_config = cloneDeep(DEFAULTS)\n    this.$_config = {}\n    this.$_cachedBreakpoints = null\n  }\n\n  static get Defaults() /* istanbul ignore next */ {\n    return DEFAULTS\n  }\n\n  get defaults() /* istanbul ignore next */ {\n    return DEFAULTS\n  }\n\n  // Returns the defaults\n  getDefaults() /* istanbul ignore next */ {\n    return this.defaults\n  }\n\n  // Method to merge in user config parameters\n  setConfig(config = {}) {\n    if (!isPlainObject(config)) {\n      /* istanbul ignore next */\n      return\n    }\n    const configKeys = getOwnPropertyNames(config)\n    configKeys.forEach(cmpName => {\n      /* istanbul ignore next */\n      if (!hasOwnProperty(DEFAULTS, cmpName)) {\n        warn(`config: unknown config property \"${cmpName}\"`)\n        return\n      }\n      const cmpConfig = config[cmpName]\n      if (cmpName === 'breakpoints') {\n        // Special case for breakpoints\n        const breakpoints = config.breakpoints\n        /* istanbul ignore if */\n        if (\n          !isArray(breakpoints) ||\n          breakpoints.length < 2 ||\n          breakpoints.some(b => !isString(b) || b.length === 0)\n        ) {\n          warn('config: \"breakpoints\" must be an array of at least 2 breakpoint names')\n        } else {\n          this.$_config.breakpoints = cloneDeep(breakpoints)\n        }\n      } else if (isPlainObject(cmpConfig)) {\n        // Component prop defaults\n        const props = getOwnPropertyNames(cmpConfig)\n        props.forEach(prop => {\n          /* istanbul ignore if */\n          if (!hasOwnProperty(DEFAULTS[cmpName], prop)) {\n            warn(`config: unknown config property \"${cmpName}.${prop}\"`)\n          } else {\n            // TODO: If we pre-populate the config with defaults, we can skip this line\n            this.$_config[cmpName] = this.$_config[cmpName] || {}\n            if (!isUndefined(cmpConfig[prop])) {\n              this.$_config[cmpName][prop] = cloneDeep(cmpConfig[prop])\n            }\n          }\n        })\n      }\n    })\n  }\n\n  // Clear the config. For testing purposes only\n  resetConfig() {\n    this.$_config = {}\n  }\n\n  // Returns a deep copy of the user config\n  getConfig() {\n    return cloneDeep(this.$_config)\n  }\n\n  getConfigValue(key) {\n    // First we try the user config, and if key not found we fall back to default value\n    // NOTE: If we deep clone DEFAULTS into config, then we can skip the fallback for get\n    return cloneDeep(get(this.$_config, key, get(DEFAULTS, key)))\n  }\n}\n\n// Method for applying a global config\nexport const setConfig = (config = {}, Vue = OurVue) => {\n  // Ensure we have a $bvConfig Object on the Vue prototype.\n  // We set on Vue and OurVue just in case consumer has not set an alias of `vue`.\n  Vue.prototype[PROP_NAME] = OurVue.prototype[PROP_NAME] =\n    Vue.prototype[PROP_NAME] || OurVue.prototype[PROP_NAME] || new BvConfig()\n  // Apply the config values\n  Vue.prototype[PROP_NAME].setConfig(config)\n}\n\n// Method for resetting the user config. Exported for testing purposes only.\nexport const resetConfig = () => {\n  if (OurVue.prototype[PROP_NAME] && OurVue.prototype[PROP_NAME].resetConfig) {\n    OurVue.prototype[PROP_NAME].resetConfig()\n  }\n}\n","import OurVue from './vue'\nimport warn from './warn'\nimport { setConfig } from './config-set'\nimport { hasWindowSupport, isJSDOM } from './env'\n\n/**\n * Checks if there are multiple instances of Vue, and warns (once) about possible issues.\n * @param {object} Vue\n */\nexport const checkMultipleVue = (() => {\n  let checkMultipleVueWarned = false\n\n  const MULTIPLE_VUE_WARNING = [\n    'Multiple instances of Vue detected!',\n    'You may need to set up an alias for Vue in your bundler config.',\n    'See: https://bootstrap-vue.js.org/docs#using-module-bundlers'\n  ].join('\\n')\n\n  return Vue => {\n    /* istanbul ignore next */\n    if (!checkMultipleVueWarned && OurVue !== Vue && !isJSDOM) {\n      warn(MULTIPLE_VUE_WARNING)\n    }\n    checkMultipleVueWarned = true\n  }\n})()\n\n/**\n * Plugin install factory function.\n * @param {object} { components, directives }\n * @returns {function} plugin install function\n */\nexport const installFactory = ({ components, directives, plugins } = {}) => {\n  const install = (Vue, config = {}) => {\n    if (install.installed) {\n      /* istanbul ignore next */\n      return\n    }\n    install.installed = true\n    checkMultipleVue(Vue)\n    setConfig(config, Vue)\n    registerComponents(Vue, components)\n    registerDirectives(Vue, directives)\n    registerPlugins(Vue, plugins)\n  }\n\n  install.installed = false\n\n  return install\n}\n\n/**\n * Plugin object factory function.\n * @param {object} { components, directives, plugins }\n * @returns {object} plugin install object\n */\nexport const pluginFactory = (opts = {}, extend = {}) => ({\n  ...extend,\n  install: installFactory(opts)\n})\n\n/**\n * Load a group of plugins.\n * @param {object} Vue\n * @param {object} Plugin definitions\n */\nexport const registerPlugins = (Vue, plugins = {}) => {\n  for (const plugin in plugins) {\n    if (plugin && plugins[plugin]) {\n      Vue.use(plugins[plugin])\n    }\n  }\n}\n\n/**\n * Load a component.\n * @param {object} Vue\n * @param {string} Component name\n * @param {object} Component definition\n */\nexport const registerComponent = (Vue, name, def) => {\n  if (Vue && name && def) {\n    Vue.component(name, def)\n  }\n}\n\n/**\n * Load a group of components.\n * @param {object} Vue\n * @param {object} Object of component definitions\n */\nexport const registerComponents = (Vue, components = {}) => {\n  for (const component in components) {\n    registerComponent(Vue, component, components[component])\n  }\n}\n\n/**\n * Load a directive.\n * @param {object} Vue\n * @param {string} Directive name\n * @param {object} Directive definition\n */\nexport const registerDirective = (Vue, name, def) => {\n  if (Vue && name && def) {\n    // Ensure that any leading V is removed from the\n    // name, as Vue adds it automatically\n    Vue.directive(name.replace(/^VB/, 'B'), def)\n  }\n}\n\n/**\n * Load a group of directives.\n * @param {object} Vue\n * @param {object} Object of directive definitions\n */\nexport const registerDirectives = (Vue, directives = {}) => {\n  for (const directive in directives) {\n    registerDirective(Vue, directive, directives[directive])\n  }\n}\n\n/**\n * Install plugin if window.Vue available\n * @param {object} Plugin definition\n */\nexport const vueUse = VuePlugin => {\n  /* istanbul ignore next */\n  if (hasWindowSupport && window.Vue) {\n    window.Vue.use(VuePlugin)\n  }\n  /* istanbul ignore next */\n  if (hasWindowSupport && VuePlugin.NAME) {\n    window[VuePlugin.NAME] = VuePlugin\n  }\n}\n","import { BTable } from './table'\nimport { BTableLite } from './table-lite'\nimport { BTableSimple } from './table-simple'\nimport { BTbody } from './tbody'\nimport { BThead } from './thead'\nimport { BTfoot } from './tfoot'\nimport { BTr } from './tr'\nimport { BTd } from './td'\nimport { BTh } from './th'\nimport { pluginFactory } from '../../utils/plugins'\n\nconst TableLitePlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BTableLite\n  }\n})\n\nconst TableSimplePlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BTableSimple,\n    BTbody,\n    BThead,\n    BTfoot,\n    BTr,\n    BTd,\n    BTh\n  }\n})\n\nconst TablePlugin = /*#__PURE__*/ pluginFactory({\n  components: {\n    BTable\n  },\n  plugins: {\n    TableLitePlugin,\n    TableSimplePlugin\n  }\n})\n\nexport {\n  // Plugins\n  TablePlugin,\n  TableLitePlugin,\n  TableSimplePlugin,\n  // Table components\n  BTable,\n  BTableLite,\n  BTableSimple,\n  // Helper components\n  BTbody,\n  BThead,\n  BTfoot,\n  BTr,\n  BTd,\n  BTh\n}\n"],"sourceRoot":""}